//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CooperAtkins.NotificationClient.Service.CdyneNotify {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", ConfigurationName="CdyneNotify.PhoneNotifySoap")]
    public interface PhoneNotifySoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/ReturnSoundFileIDs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ReturnSoundFileIDs(string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/RemoveSoundFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RemoveSoundFile(string SoundFileID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/RenameSoundFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RenameSoundFile(string SoundFileID, string NewSoundFileID, string LicenseKey);
        
        // CODEGEN: Parameter 'FileBinary' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/UploadSoundFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.UploadSoundFileResponse UploadSoundFile(CooperAtkins.NotificationClient.Service.CdyneNotify.UploadSoundFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetSoundFileLength", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double GetSoundFileLength(string SoundFileID, string LicenseKey);
        
        // CODEGEN: Parameter 'GetSoundFileResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetSoundFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileResponse GetSoundFile(CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileRequest request);
        
        // CODEGEN: Parameter 'GetTTSInULAWResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetTTSInULAW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInULAWResponse GetTTSInULAW(CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInULAWRequest request);
        
        // CODEGEN: Parameter 'GetTTSInMP3Result' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetTTSInMP3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInMP3Response GetTTSInMP3(CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInMP3Request request);
        
        // CODEGEN: Parameter 'GetSoundFileInMP3Result' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetSoundFileInMP3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInMP3Response GetSoundFileInMP3(CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInMP3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetSoundFileURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSoundFileURL(string SoundFileID, string LicenseKey);
        
        // CODEGEN: Parameter 'GetSoundFileInUlawResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetSoundFileInUlaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInUlawResponse GetSoundFileInUlaw(CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInUlawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/RecordSoundViaPhoneCall", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RecordSoundViaPhoneCall(string PhoneNumberToDial, string SoundFileID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetQueueIDStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn GetQueueIDStatus(long QueueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetQueueIDStatusesByPhoneNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NotifyReturn[] GetQueueIDStatusesByPhoneNumber(string PhoneNumber, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetQueueIDStatusWithAdvancedInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn GetQueueIDStatusWithAdvancedInfo(long QueueID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyPhoneEnglishBasic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn NotifyPhoneEnglishBasic(string PhoneNumberToDial, string TextToSay, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasicWithTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn NotifyPhoneBasicWithTransfer(string PhoneNumberToDial, string TransferNumber, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetMultipleQueueIdStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NotifyReturn[] GetMultipleQueueIdStatus(string QueueIDs, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn NotifyPhoneBasic(string PhoneNumberToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasicWithTryCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn NotifyPhoneBasicWithTryCount(short TryCount, string PhoneNumberToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyPhoneAdvanced", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn NotifyPhoneAdvanced(CooperAtkins.NotificationClient.Service.CdyneNotify.AdvancedNotifyRequest anr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NotifyReturn[] NotifyMultiplePhoneBasic(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasicWithCPM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NotifyReturn[] NotifyMultiplePhoneBasicWithCPM(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, int CallsPerMinute, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasicWithCPMandReferenceID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NotifyReturn[] NotifyMultiplePhoneBasicWithCPMandReferenceID(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, int CallsPerMinute, string ReferenceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneAdvanced", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NotifyReturn[] NotifyMultiplePhoneAdvanced(AdvancedNotifyRequest[] MultipleANR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/CancelConference", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CancelConference(string ConferenceKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/CancelNotify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CancelNotify(long QueueID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/CancelNotifyByReferenceID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CancelNotifyByReferenceID(string ReferenceID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/ScriptList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ScriptList(bool IncludeGlobalScripts, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/ScriptSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ScriptSave(string ScriptName, string ScriptText, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/ScriptDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ScriptDelete(string ScriptName, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/ScriptLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ScriptLoad(string ScriptName, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LicenseKeyVariableLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LicenseKeyVariableLoad(string VariableName, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LicenseKeyVariableSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool LicenseKeyVariableSave(string VariableName, string VariableValue, string LicenseKey);
        
        // CODEGEN: Parameter 'LM_GetListIDsByLicensekeyResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_GetListIDsByLicensekey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListIDsByLicensekeyResponse LM_GetListIDsByLicensekey(CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListIDsByLicensekeyRequest request);
        
        // CODEGEN: Parameter 'LM_GetListMembersByListIDResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_GetListMembersByListID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListMembersByListIDResponse LM_GetListMembersByListID(CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListMembersByListIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_DialList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.LM_DialReturn LM_DialList(int ListID, bool DialRecursiveLists, string CallerID, string CallerIDName, byte VoiceID, string TextToSay, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_DialListAdvanced", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.LM_DialReturn LM_DialListAdvanced(CooperAtkins.NotificationClient.Service.CdyneNotify.LM_Functions lmFunctions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_AddNewList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int LM_AddNewList(string ListName, int ParentListID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_AddListMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int LM_AddListMember(int ListID, string LicenseKey, string PhoneNumber, string ClientID, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_DeleteList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool LM_DeleteList(int ListID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_DeleteListMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool LM_DeleteListMember(int ListMemberID, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_AlterListMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool LM_AlterListMember(int ListMemberID, string licensekey, string ClientID, string FirstName, string LastName, string PhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/LM_AlterListID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool LM_AlterListID(int ListID, int ParentListID, string ListName, string Licensekey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetResponseCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Response[] GetResponseCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetAvailableAreaCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AreaCode[] GetAvailableAreaCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetAvailableIncomingNumbers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAvailableIncomingNumbers(string AreaCodeFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetAssignedNumbers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAssignedNumbers(string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/getVoices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Voice[] getVoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/AssignIncomingNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AssignIncomingNumber(string IncomingPhoneNumber, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/SetIncomingCallScript", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetIncomingCallScript(string PhoneNumber, string Script, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/NotifyWS/GetIncomingCallScript", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIncomingCallScript(string PhoneNumber, string LicenseKey);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class UploadFileResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool uploadSuccessfulField;
        
        private string errorResponseField;
        
        private int uploadedLengthInSecondsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool UploadSuccessful {
            get {
                return this.uploadSuccessfulField;
            }
            set {
                this.uploadSuccessfulField = value;
                this.RaisePropertyChanged("UploadSuccessful");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorResponse {
            get {
                return this.errorResponseField;
            }
            set {
                this.errorResponseField = value;
                this.RaisePropertyChanged("ErrorResponse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int UploadedLengthInSeconds {
            get {
                return this.uploadedLengthInSecondsField;
            }
            set {
                this.uploadedLengthInSecondsField = value;
                this.RaisePropertyChanged("UploadedLengthInSeconds");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class Voice : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int voiceIDField;
        
        private string voiceNameField;
        
        private string voiceGenderField;
        
        private int voiceAgeField;
        
        private string voiceLanguageField;
        
        private string voiceSummaryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int VoiceID {
            get {
                return this.voiceIDField;
            }
            set {
                this.voiceIDField = value;
                this.RaisePropertyChanged("VoiceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string VoiceName {
            get {
                return this.voiceNameField;
            }
            set {
                this.voiceNameField = value;
                this.RaisePropertyChanged("VoiceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string VoiceGender {
            get {
                return this.voiceGenderField;
            }
            set {
                this.voiceGenderField = value;
                this.RaisePropertyChanged("VoiceGender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int VoiceAge {
            get {
                return this.voiceAgeField;
            }
            set {
                this.voiceAgeField = value;
                this.RaisePropertyChanged("VoiceAge");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string VoiceLanguage {
            get {
                return this.voiceLanguageField;
            }
            set {
                this.voiceLanguageField = value;
                this.RaisePropertyChanged("VoiceLanguage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string VoiceSummary {
            get {
                return this.voiceSummaryField;
            }
            set {
                this.voiceSummaryField = value;
                this.RaisePropertyChanged("VoiceSummary");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class AreaCode : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string areaCodeNumberField;
        
        private string locationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AreaCodeNumber {
            get {
                return this.areaCodeNumberField;
            }
            set {
                this.areaCodeNumberField = value;
                this.RaisePropertyChanged("AreaCodeNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
                this.RaisePropertyChanged("Location");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class Response : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int responseCodeField;
        
        private string responseTextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
                this.RaisePropertyChanged("ResponseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResponseText {
            get {
                return this.responseTextField;
            }
            set {
                this.responseTextField = value;
                this.RaisePropertyChanged("ResponseText");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class LM_Functions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string callerIDField;
        
        private string callerIDNameField;
        
        private byte voiceIDField;
        
        private string textToSayField;
        
        private byte tryCountField;
        
        private string licensekeyField;
        
        private string extensionField;
        
        private string transferNumberField;
        
        private short nextTryInSecondsField;
        
        private byte tTSRateField;
        
        private byte tTSVolumeField;
        
        private System.DateTime scheduledUTCDatetimeField;
        
        private int listIDField;
        
        private bool dialRecursiveListsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CallerID {
            get {
                return this.callerIDField;
            }
            set {
                this.callerIDField = value;
                this.RaisePropertyChanged("CallerID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CallerIDName {
            get {
                return this.callerIDNameField;
            }
            set {
                this.callerIDNameField = value;
                this.RaisePropertyChanged("CallerIDName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public byte VoiceID {
            get {
                return this.voiceIDField;
            }
            set {
                this.voiceIDField = value;
                this.RaisePropertyChanged("VoiceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TextToSay {
            get {
                return this.textToSayField;
            }
            set {
                this.textToSayField = value;
                this.RaisePropertyChanged("TextToSay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public byte TryCount {
            get {
                return this.tryCountField;
            }
            set {
                this.tryCountField = value;
                this.RaisePropertyChanged("TryCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Licensekey {
            get {
                return this.licensekeyField;
            }
            set {
                this.licensekeyField = value;
                this.RaisePropertyChanged("Licensekey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string TransferNumber {
            get {
                return this.transferNumberField;
            }
            set {
                this.transferNumberField = value;
                this.RaisePropertyChanged("TransferNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public short NextTryInSeconds {
            get {
                return this.nextTryInSecondsField;
            }
            set {
                this.nextTryInSecondsField = value;
                this.RaisePropertyChanged("NextTryInSeconds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public byte TTSRate {
            get {
                return this.tTSRateField;
            }
            set {
                this.tTSRateField = value;
                this.RaisePropertyChanged("TTSRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public byte TTSVolume {
            get {
                return this.tTSVolumeField;
            }
            set {
                this.tTSVolumeField = value;
                this.RaisePropertyChanged("TTSVolume");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.DateTime ScheduledUTCDatetime {
            get {
                return this.scheduledUTCDatetimeField;
            }
            set {
                this.scheduledUTCDatetimeField = value;
                this.RaisePropertyChanged("ScheduledUTCDatetime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
                this.RaisePropertyChanged("ListID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public bool DialRecursiveLists {
            get {
                return this.dialRecursiveListsField;
            }
            set {
                this.dialRecursiveListsField = value;
                this.RaisePropertyChanged("DialRecursiveLists");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class LM_DialReturn : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private int batchIDField;
        
        private int responseCodeField;
        
        private string errorTextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int BatchID {
            get {
                return this.batchIDField;
            }
            set {
                this.batchIDField = value;
                this.RaisePropertyChanged("BatchID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
                this.RaisePropertyChanged("ResponseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
                this.RaisePropertyChanged("ErrorText");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class LM_ListMembers : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int listMemberIDField;
        
        private string phoneNumberField;
        
        private string clientIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ListMemberID {
            get {
                return this.listMemberIDField;
            }
            set {
                this.listMemberIDField = value;
                this.RaisePropertyChanged("ListMemberID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
                this.RaisePropertyChanged("PhoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
                this.RaisePropertyChanged("ClientID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class LM_ListIDs : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int listIDField;
        
        private int parentListIDField;
        
        private string listNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
                this.RaisePropertyChanged("ListID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ParentListID {
            get {
                return this.parentListIDField;
            }
            set {
                this.parentListIDField = value;
                this.RaisePropertyChanged("ParentListID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ListName {
            get {
                return this.listNameField;
            }
            set {
                this.listNameField = value;
                this.RaisePropertyChanged("ListName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class AdvancedNotifyRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string phoneNumberToDialField;
        
        private string transferNumberField;
        
        private int voiceIDField;
        
        private string callerIDNumberField;
        
        private string callerIDNameField;
        
        private string textToSayField;
        
        private string licenseKeyField;
        
        private int tryCountField;
        
        private int nextTryInSecondsField;
        
        private System.DateTime uTCScheduledDateTimeField;
        
        private byte tTSrateField;
        
        private byte tTSvolumeField;
        
        private int maxCallLengthField;
        
        private string statusChangePostUrlField;
        
        private string referenceIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PhoneNumberToDial {
            get {
                return this.phoneNumberToDialField;
            }
            set {
                this.phoneNumberToDialField = value;
                this.RaisePropertyChanged("PhoneNumberToDial");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TransferNumber {
            get {
                return this.transferNumberField;
            }
            set {
                this.transferNumberField = value;
                this.RaisePropertyChanged("TransferNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int VoiceID {
            get {
                return this.voiceIDField;
            }
            set {
                this.voiceIDField = value;
                this.RaisePropertyChanged("VoiceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CallerIDNumber {
            get {
                return this.callerIDNumberField;
            }
            set {
                this.callerIDNumberField = value;
                this.RaisePropertyChanged("CallerIDNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CallerIDName {
            get {
                return this.callerIDNameField;
            }
            set {
                this.callerIDNameField = value;
                this.RaisePropertyChanged("CallerIDName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string TextToSay {
            get {
                return this.textToSayField;
            }
            set {
                this.textToSayField = value;
                this.RaisePropertyChanged("TextToSay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string LicenseKey {
            get {
                return this.licenseKeyField;
            }
            set {
                this.licenseKeyField = value;
                this.RaisePropertyChanged("LicenseKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int TryCount {
            get {
                return this.tryCountField;
            }
            set {
                this.tryCountField = value;
                this.RaisePropertyChanged("TryCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int NextTryInSeconds {
            get {
                return this.nextTryInSecondsField;
            }
            set {
                this.nextTryInSecondsField = value;
                this.RaisePropertyChanged("NextTryInSeconds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.DateTime UTCScheduledDateTime {
            get {
                return this.uTCScheduledDateTimeField;
            }
            set {
                this.uTCScheduledDateTimeField = value;
                this.RaisePropertyChanged("UTCScheduledDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public byte TTSrate {
            get {
                return this.tTSrateField;
            }
            set {
                this.tTSrateField = value;
                this.RaisePropertyChanged("TTSrate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public byte TTSvolume {
            get {
                return this.tTSvolumeField;
            }
            set {
                this.tTSvolumeField = value;
                this.RaisePropertyChanged("TTSvolume");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public int MaxCallLength {
            get {
                return this.maxCallLengthField;
            }
            set {
                this.maxCallLengthField = value;
                this.RaisePropertyChanged("MaxCallLength");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string StatusChangePostUrl {
            get {
                return this.statusChangePostUrlField;
            }
            set {
                this.statusChangePostUrlField = value;
                this.RaisePropertyChanged("StatusChangePostUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string ReferenceID {
            get {
                return this.referenceIDField;
            }
            set {
                this.referenceIDField = value;
                this.RaisePropertyChanged("ReferenceID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class Variable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string variableNameField;
        
        private string variableValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string VariableName {
            get {
                return this.variableNameField;
            }
            set {
                this.variableNameField = value;
                this.RaisePropertyChanged("VariableName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string VariableValue {
            get {
                return this.variableValueField;
            }
            set {
                this.variableValueField = value;
                this.RaisePropertyChanged("VariableValue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/NotifyWS/")]
    public partial class NotifyReturn : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int responseCodeField;
        
        private string responseTextField;
        
        private bool callAnsweredField;
        
        private long queueIDField;
        
        private int tryCountField;
        
        private bool demoField;
        
        private string digitsPressedField;
        
        private string machineDetectionField;
        
        private int durationField;
        
        private System.DateTime startTimeField;
        
        private System.DateTime endTimeField;
        
        private decimal minuteRateField;
        
        private string countryField;
        
        private bool callCompleteField;
        
        private string textToSayField;
        
        private Variable[] variableArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
                this.RaisePropertyChanged("ResponseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResponseText {
            get {
                return this.responseTextField;
            }
            set {
                this.responseTextField = value;
                this.RaisePropertyChanged("ResponseText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool CallAnswered {
            get {
                return this.callAnsweredField;
            }
            set {
                this.callAnsweredField = value;
                this.RaisePropertyChanged("CallAnswered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long QueueID {
            get {
                return this.queueIDField;
            }
            set {
                this.queueIDField = value;
                this.RaisePropertyChanged("QueueID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int TryCount {
            get {
                return this.tryCountField;
            }
            set {
                this.tryCountField = value;
                this.RaisePropertyChanged("TryCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool Demo {
            get {
                return this.demoField;
            }
            set {
                this.demoField = value;
                this.RaisePropertyChanged("Demo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DigitsPressed {
            get {
                return this.digitsPressedField;
            }
            set {
                this.digitsPressedField = value;
                this.RaisePropertyChanged("DigitsPressed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string MachineDetection {
            get {
                return this.machineDetectionField;
            }
            set {
                this.machineDetectionField = value;
                this.RaisePropertyChanged("MachineDetection");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
                this.RaisePropertyChanged("Duration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
                this.RaisePropertyChanged("StartTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
                this.RaisePropertyChanged("EndTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public decimal MinuteRate {
            get {
                return this.minuteRateField;
            }
            set {
                this.minuteRateField = value;
                this.RaisePropertyChanged("MinuteRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("Country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public bool CallComplete {
            get {
                return this.callCompleteField;
            }
            set {
                this.callCompleteField = value;
                this.RaisePropertyChanged("CallComplete");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string TextToSay {
            get {
                return this.textToSayField;
            }
            set {
                this.textToSayField = value;
                this.RaisePropertyChanged("TextToSay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=15)]
        public Variable[] VariableArray {
            get {
                return this.variableArrayField;
            }
            set {
                this.variableArrayField = value;
                this.RaisePropertyChanged("VariableArray");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadSoundFile", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class UploadSoundFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileBinary;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public string SoundFileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=2)]
        public string LicenseKey;
        
        public UploadSoundFileRequest() {
        }
        
        public UploadSoundFileRequest(byte[] FileBinary, string SoundFileID, string LicenseKey) {
            this.FileBinary = FileBinary;
            this.SoundFileID = SoundFileID;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadSoundFileResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class UploadSoundFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public CooperAtkins.NotificationClient.Service.CdyneNotify.UploadFileResponse UploadSoundFileResult;
        
        public UploadSoundFileResponse() {
        }
        
        public UploadSoundFileResponse(CooperAtkins.NotificationClient.Service.CdyneNotify.UploadFileResponse UploadSoundFileResult) {
            this.UploadSoundFileResult = UploadSoundFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFile", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string SoundFileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public string LicenseKey;
        
        public GetSoundFileRequest() {
        }
        
        public GetSoundFileRequest(string SoundFileID, string LicenseKey) {
            this.SoundFileID = SoundFileID;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFileResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSoundFileResult;
        
        public GetSoundFileResponse() {
        }
        
        public GetSoundFileResponse(byte[] GetSoundFileResult) {
            this.GetSoundFileResult = GetSoundFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTTSInULAW", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetTTSInULAWRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string TextToSay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public int VoiceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=2)]
        public byte TTSrate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=3)]
        public byte TTSvolume;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=4)]
        public string LicenseKey;
        
        public GetTTSInULAWRequest() {
        }
        
        public GetTTSInULAWRequest(string TextToSay, int VoiceID, byte TTSrate, byte TTSvolume, string LicenseKey) {
            this.TextToSay = TextToSay;
            this.VoiceID = VoiceID;
            this.TTSrate = TTSrate;
            this.TTSvolume = TTSvolume;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTTSInULAWResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetTTSInULAWResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetTTSInULAWResult;
        
        public GetTTSInULAWResponse() {
        }
        
        public GetTTSInULAWResponse(byte[] GetTTSInULAWResult) {
            this.GetTTSInULAWResult = GetTTSInULAWResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTTSInMP3", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetTTSInMP3Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string TextToSay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public int VoiceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=2)]
        public int BitRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=3)]
        public byte TTSrate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=4)]
        public byte TTSvolume;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=5)]
        public string LicenseKey;
        
        public GetTTSInMP3Request() {
        }
        
        public GetTTSInMP3Request(string TextToSay, int VoiceID, int BitRate, byte TTSrate, byte TTSvolume, string LicenseKey) {
            this.TextToSay = TextToSay;
            this.VoiceID = VoiceID;
            this.BitRate = BitRate;
            this.TTSrate = TTSrate;
            this.TTSvolume = TTSvolume;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTTSInMP3Response", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetTTSInMP3Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetTTSInMP3Result;
        
        public GetTTSInMP3Response() {
        }
        
        public GetTTSInMP3Response(byte[] GetTTSInMP3Result) {
            this.GetTTSInMP3Result = GetTTSInMP3Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFileInMP3", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileInMP3Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string SoundFileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public int BitRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=2)]
        public string LicenseKey;
        
        public GetSoundFileInMP3Request() {
        }
        
        public GetSoundFileInMP3Request(string SoundFileID, int BitRate, string LicenseKey) {
            this.SoundFileID = SoundFileID;
            this.BitRate = BitRate;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFileInMP3Response", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileInMP3Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSoundFileInMP3Result;
        
        public GetSoundFileInMP3Response() {
        }
        
        public GetSoundFileInMP3Response(byte[] GetSoundFileInMP3Result) {
            this.GetSoundFileInMP3Result = GetSoundFileInMP3Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFileInUlaw", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileInUlawRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string SoundFileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public string LicenseKey;
        
        public GetSoundFileInUlawRequest() {
        }
        
        public GetSoundFileInUlawRequest(string SoundFileID, string LicenseKey) {
            this.SoundFileID = SoundFileID;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoundFileInUlawResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class GetSoundFileInUlawResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSoundFileInUlawResult;
        
        public GetSoundFileInUlawResponse() {
        }
        
        public GetSoundFileInUlawResponse(byte[] GetSoundFileInUlawResult) {
            this.GetSoundFileInUlawResult = GetSoundFileInUlawResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LM_GetListIDsByLicensekey", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class LM_GetListIDsByLicensekeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public string licensekey;
        
        public LM_GetListIDsByLicensekeyRequest() {
        }
        
        public LM_GetListIDsByLicensekeyRequest(string licensekey) {
            this.licensekey = licensekey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LM_GetListIDsByLicensekeyResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class LM_GetListIDsByLicensekeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LM_ListIDs[] LM_GetListIDsByLicensekeyResult;
        
        public LM_GetListIDsByLicensekeyResponse() {
        }
        
        public LM_GetListIDsByLicensekeyResponse(LM_ListIDs[] LM_GetListIDsByLicensekeyResult) {
            this.LM_GetListIDsByLicensekeyResult = LM_GetListIDsByLicensekeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LM_GetListMembersByListID", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class LM_GetListMembersByListIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        public int ListID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=1)]
        public string Licensekey;
        
        public LM_GetListMembersByListIDRequest() {
        }
        
        public LM_GetListMembersByListIDRequest(int ListID, string Licensekey) {
            this.ListID = ListID;
            this.Licensekey = Licensekey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LM_GetListMembersByListIDResponse", WrapperNamespace="http://ws.cdyne.com/NotifyWS/", IsWrapped=true)]
    public partial class LM_GetListMembersByListIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.cdyne.com/NotifyWS/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LM_ListMembers[] LM_GetListMembersByListIDResult;
        
        public LM_GetListMembersByListIDResponse() {
        }
        
        public LM_GetListMembersByListIDResponse(LM_ListMembers[] LM_GetListMembersByListIDResult) {
            this.LM_GetListMembersByListIDResult = LM_GetListMembersByListIDResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PhoneNotifySoapChannel : CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhoneNotifySoapClient : System.ServiceModel.ClientBase<CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap>, CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap {
        
        public PhoneNotifySoapClient() {
        }
        
        public PhoneNotifySoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhoneNotifySoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhoneNotifySoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhoneNotifySoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public string[] ReturnSoundFileIDs(string LicenseKey) {
            return base.Channel.ReturnSoundFileIDs(LicenseKey);
        }
        
        public bool RemoveSoundFile(string SoundFileID, string LicenseKey) {
            return base.Channel.RemoveSoundFile(SoundFileID, LicenseKey);
        }
        
        public bool RenameSoundFile(string SoundFileID, string NewSoundFileID, string LicenseKey) {
            return base.Channel.RenameSoundFile(SoundFileID, NewSoundFileID, LicenseKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.UploadSoundFileResponse CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap.UploadSoundFile(CooperAtkins.NotificationClient.Service.CdyneNotify.UploadSoundFileRequest request) {
            return base.Channel.UploadSoundFile(request);
        }
        
        public CooperAtkins.NotificationClient.Service.CdyneNotify.UploadFileResponse UploadSoundFile(byte[] FileBinary, string SoundFileID, string LicenseKey) {
            CooperAtkins.NotificationClient.Service.CdyneNotify.UploadSoundFileRequest inValue = new CooperAtkins.NotificationClient.Service.CdyneNotify.UploadSoundFileRequest();
            inValue.FileBinary = FileBinary;
            inValue.SoundFileID = SoundFileID;
            inValue.LicenseKey = LicenseKey;
            CooperAtkins.NotificationClient.Service.CdyneNotify.UploadSoundFileResponse retVal = ((CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap)(this)).UploadSoundFile(inValue);
            return retVal.UploadSoundFileResult;
        }
        
        public double GetSoundFileLength(string SoundFileID, string LicenseKey) {
            return base.Channel.GetSoundFileLength(SoundFileID, LicenseKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileResponse CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap.GetSoundFile(CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileRequest request) {
            return base.Channel.GetSoundFile(request);
        }
        
        public byte[] GetSoundFile(string SoundFileID, string LicenseKey) {
            CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileRequest inValue = new CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileRequest();
            inValue.SoundFileID = SoundFileID;
            inValue.LicenseKey = LicenseKey;
            CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileResponse retVal = ((CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap)(this)).GetSoundFile(inValue);
            return retVal.GetSoundFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInULAWResponse CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap.GetTTSInULAW(CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInULAWRequest request) {
            return base.Channel.GetTTSInULAW(request);
        }
        
        public byte[] GetTTSInULAW(string TextToSay, int VoiceID, byte TTSrate, byte TTSvolume, string LicenseKey) {
            CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInULAWRequest inValue = new CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInULAWRequest();
            inValue.TextToSay = TextToSay;
            inValue.VoiceID = VoiceID;
            inValue.TTSrate = TTSrate;
            inValue.TTSvolume = TTSvolume;
            inValue.LicenseKey = LicenseKey;
            CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInULAWResponse retVal = ((CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap)(this)).GetTTSInULAW(inValue);
            return retVal.GetTTSInULAWResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInMP3Response CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap.GetTTSInMP3(CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInMP3Request request) {
            return base.Channel.GetTTSInMP3(request);
        }
        
        public byte[] GetTTSInMP3(string TextToSay, int VoiceID, int BitRate, byte TTSrate, byte TTSvolume, string LicenseKey) {
            CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInMP3Request inValue = new CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInMP3Request();
            inValue.TextToSay = TextToSay;
            inValue.VoiceID = VoiceID;
            inValue.BitRate = BitRate;
            inValue.TTSrate = TTSrate;
            inValue.TTSvolume = TTSvolume;
            inValue.LicenseKey = LicenseKey;
            CooperAtkins.NotificationClient.Service.CdyneNotify.GetTTSInMP3Response retVal = ((CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap)(this)).GetTTSInMP3(inValue);
            return retVal.GetTTSInMP3Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInMP3Response CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap.GetSoundFileInMP3(CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInMP3Request request) {
            return base.Channel.GetSoundFileInMP3(request);
        }
        
        public byte[] GetSoundFileInMP3(string SoundFileID, int BitRate, string LicenseKey) {
            CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInMP3Request inValue = new CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInMP3Request();
            inValue.SoundFileID = SoundFileID;
            inValue.BitRate = BitRate;
            inValue.LicenseKey = LicenseKey;
            CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInMP3Response retVal = ((CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap)(this)).GetSoundFileInMP3(inValue);
            return retVal.GetSoundFileInMP3Result;
        }
        
        public string GetSoundFileURL(string SoundFileID, string LicenseKey) {
            return base.Channel.GetSoundFileURL(SoundFileID, LicenseKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInUlawResponse CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap.GetSoundFileInUlaw(CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInUlawRequest request) {
            return base.Channel.GetSoundFileInUlaw(request);
        }
        
        public byte[] GetSoundFileInUlaw(string SoundFileID, string LicenseKey) {
            CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInUlawRequest inValue = new CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInUlawRequest();
            inValue.SoundFileID = SoundFileID;
            inValue.LicenseKey = LicenseKey;
            CooperAtkins.NotificationClient.Service.CdyneNotify.GetSoundFileInUlawResponse retVal = ((CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap)(this)).GetSoundFileInUlaw(inValue);
            return retVal.GetSoundFileInUlawResult;
        }
        
        public bool RecordSoundViaPhoneCall(string PhoneNumberToDial, string SoundFileID, string LicenseKey) {
            return base.Channel.RecordSoundViaPhoneCall(PhoneNumberToDial, SoundFileID, LicenseKey);
        }
        
        public CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn GetQueueIDStatus(long QueueID) {
            return base.Channel.GetQueueIDStatus(QueueID);
        }
        
        public NotifyReturn[] GetQueueIDStatusesByPhoneNumber(string PhoneNumber, string LicenseKey) {
            return base.Channel.GetQueueIDStatusesByPhoneNumber(PhoneNumber, LicenseKey);
        }
        
        public CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn GetQueueIDStatusWithAdvancedInfo(long QueueID, string LicenseKey) {
            return base.Channel.GetQueueIDStatusWithAdvancedInfo(QueueID, LicenseKey);
        }
        
        public CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn NotifyPhoneEnglishBasic(string PhoneNumberToDial, string TextToSay, string LicenseKey) {
            return base.Channel.NotifyPhoneEnglishBasic(PhoneNumberToDial, TextToSay, LicenseKey);
        }
        
        public CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn NotifyPhoneBasicWithTransfer(string PhoneNumberToDial, string TransferNumber, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey) {
            return base.Channel.NotifyPhoneBasicWithTransfer(PhoneNumberToDial, TransferNumber, TextToSay, CallerID, CallerIDname, VoiceID, LicenseKey);
        }
        
        public NotifyReturn[] GetMultipleQueueIdStatus(string QueueIDs, string LicenseKey) {
            return base.Channel.GetMultipleQueueIdStatus(QueueIDs, LicenseKey);
        }
        
        public CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn NotifyPhoneBasic(string PhoneNumberToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey) {
            return base.Channel.NotifyPhoneBasic(PhoneNumberToDial, TextToSay, CallerID, CallerIDname, VoiceID, LicenseKey);
        }
        
        public CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn NotifyPhoneBasicWithTryCount(short TryCount, string PhoneNumberToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey) {
            return base.Channel.NotifyPhoneBasicWithTryCount(TryCount, PhoneNumberToDial, TextToSay, CallerID, CallerIDname, VoiceID, LicenseKey);
        }
        
        public CooperAtkins.NotificationClient.Service.CdyneNotify.NotifyReturn NotifyPhoneAdvanced(CooperAtkins.NotificationClient.Service.CdyneNotify.AdvancedNotifyRequest anr) {
            return base.Channel.NotifyPhoneAdvanced(anr);
        }
        
        public NotifyReturn[] NotifyMultiplePhoneBasic(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, string LicenseKey) {
            return base.Channel.NotifyMultiplePhoneBasic(PhoneNumbersToDial, TextToSay, CallerID, CallerIDname, VoiceID, LicenseKey);
        }
        
        public NotifyReturn[] NotifyMultiplePhoneBasicWithCPM(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, int CallsPerMinute, string LicenseKey) {
            return base.Channel.NotifyMultiplePhoneBasicWithCPM(PhoneNumbersToDial, TextToSay, CallerID, CallerIDname, VoiceID, CallsPerMinute, LicenseKey);
        }
        
        public NotifyReturn[] NotifyMultiplePhoneBasicWithCPMandReferenceID(string PhoneNumbersToDial, string TextToSay, string CallerID, string CallerIDname, string VoiceID, int CallsPerMinute, string ReferenceID, string LicenseKey) {
            return base.Channel.NotifyMultiplePhoneBasicWithCPMandReferenceID(PhoneNumbersToDial, TextToSay, CallerID, CallerIDname, VoiceID, CallsPerMinute, ReferenceID, LicenseKey);
        }
        
        public NotifyReturn[] NotifyMultiplePhoneAdvanced(AdvancedNotifyRequest[] MultipleANR) {
            return base.Channel.NotifyMultiplePhoneAdvanced(MultipleANR);
        }
        
        public void CancelConference(string ConferenceKey) {
            base.Channel.CancelConference(ConferenceKey);
        }
        
        public bool CancelNotify(long QueueID, string LicenseKey) {
            return base.Channel.CancelNotify(QueueID, LicenseKey);
        }
        
        public int CancelNotifyByReferenceID(string ReferenceID, string LicenseKey) {
            return base.Channel.CancelNotifyByReferenceID(ReferenceID, LicenseKey);
        }
        
        public string[] ScriptList(bool IncludeGlobalScripts, string LicenseKey) {
            return base.Channel.ScriptList(IncludeGlobalScripts, LicenseKey);
        }
        
        public bool ScriptSave(string ScriptName, string ScriptText, string LicenseKey) {
            return base.Channel.ScriptSave(ScriptName, ScriptText, LicenseKey);
        }
        
        public bool ScriptDelete(string ScriptName, string LicenseKey) {
            return base.Channel.ScriptDelete(ScriptName, LicenseKey);
        }
        
        public string ScriptLoad(string ScriptName, string LicenseKey) {
            return base.Channel.ScriptLoad(ScriptName, LicenseKey);
        }
        
        public string LicenseKeyVariableLoad(string VariableName, string LicenseKey) {
            return base.Channel.LicenseKeyVariableLoad(VariableName, LicenseKey);
        }
        
        public bool LicenseKeyVariableSave(string VariableName, string VariableValue, string LicenseKey) {
            return base.Channel.LicenseKeyVariableSave(VariableName, VariableValue, LicenseKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListIDsByLicensekeyResponse CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap.LM_GetListIDsByLicensekey(CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListIDsByLicensekeyRequest request) {
            return base.Channel.LM_GetListIDsByLicensekey(request);
        }
        
        public LM_ListIDs[] LM_GetListIDsByLicensekey(string licensekey) {
            CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListIDsByLicensekeyRequest inValue = new CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListIDsByLicensekeyRequest();
            inValue.licensekey = licensekey;
            CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListIDsByLicensekeyResponse retVal = ((CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap)(this)).LM_GetListIDsByLicensekey(inValue);
            return retVal.LM_GetListIDsByLicensekeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListMembersByListIDResponse CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap.LM_GetListMembersByListID(CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListMembersByListIDRequest request) {
            return base.Channel.LM_GetListMembersByListID(request);
        }
        
        public LM_ListMembers[] LM_GetListMembersByListID(int ListID, string Licensekey) {
            CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListMembersByListIDRequest inValue = new CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListMembersByListIDRequest();
            inValue.ListID = ListID;
            inValue.Licensekey = Licensekey;
            CooperAtkins.NotificationClient.Service.CdyneNotify.LM_GetListMembersByListIDResponse retVal = ((CooperAtkins.NotificationClient.Service.CdyneNotify.PhoneNotifySoap)(this)).LM_GetListMembersByListID(inValue);
            return retVal.LM_GetListMembersByListIDResult;
        }
        
        public CooperAtkins.NotificationClient.Service.CdyneNotify.LM_DialReturn LM_DialList(int ListID, bool DialRecursiveLists, string CallerID, string CallerIDName, byte VoiceID, string TextToSay, string LicenseKey) {
            return base.Channel.LM_DialList(ListID, DialRecursiveLists, CallerID, CallerIDName, VoiceID, TextToSay, LicenseKey);
        }
        
        public CooperAtkins.NotificationClient.Service.CdyneNotify.LM_DialReturn LM_DialListAdvanced(CooperAtkins.NotificationClient.Service.CdyneNotify.LM_Functions lmFunctions) {
            return base.Channel.LM_DialListAdvanced(lmFunctions);
        }
        
        public int LM_AddNewList(string ListName, int ParentListID, string LicenseKey) {
            return base.Channel.LM_AddNewList(ListName, ParentListID, LicenseKey);
        }
        
        public int LM_AddListMember(int ListID, string LicenseKey, string PhoneNumber, string ClientID, string FirstName, string LastName) {
            return base.Channel.LM_AddListMember(ListID, LicenseKey, PhoneNumber, ClientID, FirstName, LastName);
        }
        
        public bool LM_DeleteList(int ListID, string LicenseKey) {
            return base.Channel.LM_DeleteList(ListID, LicenseKey);
        }
        
        public bool LM_DeleteListMember(int ListMemberID, string LicenseKey) {
            return base.Channel.LM_DeleteListMember(ListMemberID, LicenseKey);
        }
        
        public bool LM_AlterListMember(int ListMemberID, string licensekey, string ClientID, string FirstName, string LastName, string PhoneNumber) {
            return base.Channel.LM_AlterListMember(ListMemberID, licensekey, ClientID, FirstName, LastName, PhoneNumber);
        }
        
        public bool LM_AlterListID(int ListID, int ParentListID, string ListName, string Licensekey) {
            return base.Channel.LM_AlterListID(ListID, ParentListID, ListName, Licensekey);
        }
        
        public Response[] GetResponseCodes() {
            return base.Channel.GetResponseCodes();
        }
        
        public AreaCode[] GetAvailableAreaCodes() {
            return base.Channel.GetAvailableAreaCodes();
        }
        
        public string[] GetAvailableIncomingNumbers(string AreaCodeFilter) {
            return base.Channel.GetAvailableIncomingNumbers(AreaCodeFilter);
        }
        
        public string[] GetAssignedNumbers(string LicenseKey) {
            return base.Channel.GetAssignedNumbers(LicenseKey);
        }
        
        public Voice[] getVoices() {
            return base.Channel.getVoices();
        }
        
        public bool AssignIncomingNumber(string IncomingPhoneNumber, string LicenseKey) {
            return base.Channel.AssignIncomingNumber(IncomingPhoneNumber, LicenseKey);
        }
        
        public bool SetIncomingCallScript(string PhoneNumber, string Script, string LicenseKey) {
            return base.Channel.SetIncomingCallScript(PhoneNumber, Script, LicenseKey);
        }
        
        public string GetIncomingCallScript(string PhoneNumber, string LicenseKey) {
            return base.Channel.GetIncomingCallScript(PhoneNumber, LicenseKey);
        }
    }
}
