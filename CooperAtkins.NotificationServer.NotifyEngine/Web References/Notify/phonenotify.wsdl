<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://ws.cdyne.com/NotifyWS/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:s1="http://ws.cdyne.com/NotifyWS/AbstractTypes" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://ws.cdyne.com/NotifyWS/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This service is FREE to test.  The system will attempt to call a number 1 time until it is answered (Can be modified with the TryCount property).&lt;br&gt;We now accept Extension numbers by using an 'x' in the phone number (ex:555-555-1000x3025).&lt;br&gt;&lt;br&gt;A reminder about abuse:  &lt;b&gt;Threats and illegal activity can be shared with the authorities.&lt;/b&gt;&lt;p&gt; For Advanced TextToSay Commands Visit: &lt;a href="http://wiki.cdyne.com/index.php/Notify_TextToSay_Commands"&gt;http://wiki.cdyne.com/index.php/Notify_TextToSay_Commands&lt;/a&gt;&lt;/p&gt;</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://ws.cdyne.com/NotifyWS/">
      <s:element name="GetVersion">
        <s:complexType />
      </s:element>
      <s:element name="GetVersionResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetVersionResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReturnSoundFileIDs">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReturnSoundFileIDsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ReturnSoundFileIDsResult" type="tns:ArrayOfString" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfString">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="RemoveSoundFile">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SoundFileID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RemoveSoundFileResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="RemoveSoundFileResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RenameSoundFile">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SoundFileID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="NewSoundFileID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RenameSoundFileResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="RenameSoundFileResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UploadSoundFile">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FileBinary" type="s:base64Binary" />
            <s:element minOccurs="0" maxOccurs="1" name="SoundFileID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UploadSoundFileResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UploadSoundFileResult" type="tns:UploadFileResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="UploadFileResponse">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="UploadSuccessful" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorResponse" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="UploadedLengthInSeconds" type="s:int" />
        </s:sequence>
      </s:complexType>
      <s:element name="GetSoundFileLength">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SoundFileID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSoundFileLengthResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSoundFileLengthResult" type="s:double" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSoundFile">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SoundFileID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSoundFileResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSoundFileResult" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTTSInULAW">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="VoiceID" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="TTSrate" type="s:unsignedByte" />
            <s:element minOccurs="1" maxOccurs="1" name="TTSvolume" type="s:unsignedByte" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTTSInULAWResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetTTSInULAWResult" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTTSInMP3">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="VoiceID" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="BitRate" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="TTSrate" type="s:unsignedByte" />
            <s:element minOccurs="1" maxOccurs="1" name="TTSvolume" type="s:unsignedByte" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTTSInMP3Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetTTSInMP3Result" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSoundFileInMP3">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SoundFileID" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="BitRate" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSoundFileInMP3Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSoundFileInMP3Result" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSoundFileURL">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SoundFileID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSoundFileURLResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSoundFileURLResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSoundFileInUlaw">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SoundFileID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSoundFileInUlawResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSoundFileInUlawResult" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RecordSoundViaPhoneCall">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumberToDial" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="SoundFileID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RecordSoundViaPhoneCallResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="RecordSoundViaPhoneCallResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetQueueIDStatus">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="QueueID" type="s:long" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetQueueIDStatusResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetQueueIDStatusResult" type="tns:NotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="NotifyReturn">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="ResponseCode" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ResponseText" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="CallAnswered" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="QueueID" type="s:long" />
          <s:element minOccurs="1" maxOccurs="1" name="TryCount" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Demo" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="DigitsPressed" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="MachineDetection" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Duration" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="StartTime" type="s:dateTime" />
          <s:element minOccurs="1" maxOccurs="1" name="EndTime" type="s:dateTime" />
          <s:element minOccurs="1" maxOccurs="1" name="MinuteRate" type="s:decimal" />
          <s:element minOccurs="0" maxOccurs="1" name="Country" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="CallComplete" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="VariableArray" type="tns:ArrayOfVariable" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfVariable">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="Variable" nillable="true" type="tns:Variable" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="Variable">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="VariableName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="VariableValue" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="GetQueueIDStatusesByPhoneNumber">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetQueueIDStatusesByPhoneNumberResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetQueueIDStatusesByPhoneNumberResult" type="tns:ArrayOfNotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfNotifyReturn">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="NotifyReturn" nillable="true" type="tns:NotifyReturn" />
        </s:sequence>
      </s:complexType>
      <s:element name="GetQueueIDStatusWithAdvancedInfo">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="QueueID" type="s:long" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetQueueIDStatusWithAdvancedInfoResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetQueueIDStatusWithAdvancedInfoResult" type="tns:NotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyPhoneEnglishBasic">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumberToDial" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyPhoneEnglishBasicResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NotifyPhoneEnglishBasicResult" type="tns:NotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyPhoneBasicWithTransfer">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumberToDial" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="TransferNumber" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerIDname" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="VoiceID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyPhoneBasicWithTransferResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NotifyPhoneBasicWithTransferResult" type="tns:NotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetMultipleQueueIdStatus">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="QueueIDs" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetMultipleQueueIdStatusResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetMultipleQueueIdStatusResult" type="tns:ArrayOfNotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyPhoneBasic">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumberToDial" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerIDname" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="VoiceID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyPhoneBasicResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NotifyPhoneBasicResult" type="tns:NotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyPhoneBasicWithTryCount">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="TryCount" type="s:short" />
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumberToDial" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerIDname" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="VoiceID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyPhoneBasicWithTryCountResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NotifyPhoneBasicWithTryCountResult" type="tns:NotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyPhoneAdvanced">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="anr" type="tns:AdvancedNotifyRequest" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="AdvancedNotifyRequest">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="PhoneNumberToDial" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="TransferNumber" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="VoiceID" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="CallerIDNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CallerIDName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="TryCount" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="NextTryInSeconds" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="UTCScheduledDateTime" type="s:dateTime" />
          <s:element minOccurs="1" maxOccurs="1" name="TTSrate" type="s:unsignedByte" />
          <s:element minOccurs="1" maxOccurs="1" name="TTSvolume" type="s:unsignedByte" />
          <s:element minOccurs="1" maxOccurs="1" name="MaxCallLength" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="StatusChangePostUrl" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ReferenceID" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="NotifyPhoneAdvancedResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NotifyPhoneAdvancedResult" type="tns:NotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyMultiplePhoneBasic">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumbersToDial" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerIDname" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="VoiceID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyMultiplePhoneBasicResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NotifyMultiplePhoneBasicResult" type="tns:ArrayOfNotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyMultiplePhoneBasicWithCPM">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumbersToDial" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerIDname" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="VoiceID" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="CallsPerMinute" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyMultiplePhoneBasicWithCPMResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NotifyMultiplePhoneBasicWithCPMResult" type="tns:ArrayOfNotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyMultiplePhoneBasicWithCPMandReferenceID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumbersToDial" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerIDname" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="VoiceID" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="CallsPerMinute" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="ReferenceID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyMultiplePhoneBasicWithCPMandReferenceIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NotifyMultiplePhoneBasicWithCPMandReferenceIDResult" type="tns:ArrayOfNotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NotifyMultiplePhoneAdvanced">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="MultipleANR" type="tns:ArrayOfAdvancedNotifyRequest" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfAdvancedNotifyRequest">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="AdvancedNotifyRequest" nillable="true" type="tns:AdvancedNotifyRequest" />
        </s:sequence>
      </s:complexType>
      <s:element name="NotifyMultiplePhoneAdvancedResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NotifyMultiplePhoneAdvancedResult" type="tns:ArrayOfNotifyReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelConference">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ConferenceKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelConferenceResponse">
        <s:complexType />
      </s:element>
      <s:element name="CancelNotify">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="QueueID" type="s:long" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelNotifyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="CancelNotifyResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelNotifyByReferenceID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ReferenceID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelNotifyByReferenceIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="CancelNotifyByReferenceIDResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ScriptList">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="IncludeGlobalScripts" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ScriptListResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ScriptListResult" type="tns:ArrayOfString" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ScriptSave">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ScriptName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="ScriptText" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ScriptSaveResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ScriptSaveResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ScriptDelete">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ScriptName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ScriptDeleteResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ScriptDeleteResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ScriptLoad">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ScriptName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ScriptLoadResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ScriptLoadResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LicenseKeyVariableLoad">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="VariableName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LicenseKeyVariableLoadResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKeyVariableLoadResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LicenseKeyVariableSave">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="VariableName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="VariableValue" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LicenseKeyVariableSaveResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LicenseKeyVariableSaveResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_GetListIDsByLicensekey">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="licensekey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_GetListIDsByLicensekeyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LM_GetListIDsByLicensekeyResult" type="tns:ArrayOfLM_ListIDs" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfLM_ListIDs">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="LM_ListIDs" type="tns:LM_ListIDs" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="LM_ListIDs">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="ListID" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="ParentListID" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ListName" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="LM_GetListMembersByListID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ListID" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="Licensekey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_GetListMembersByListIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LM_GetListMembersByListIDResult" type="tns:ArrayOfLM_ListMembers" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfLM_ListMembers">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="LM_ListMembers" type="tns:LM_ListMembers" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="LM_ListMembers">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="ListMemberID" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ClientID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="FirstName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="LastName" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="LM_DialList">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ListID" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="DialRecursiveLists" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="CallerIDName" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="VoiceID" type="s:unsignedByte" />
            <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_DialListResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LM_DialListResult" type="tns:LM_DialReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="LM_DialReturn">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Success" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="BatchID" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="ResponseCode" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorText" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="LM_DialListAdvanced">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="lmFunctions" type="tns:LM_Functions" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="LM_Functions">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="CallerID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CallerIDName" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="VoiceID" type="s:unsignedByte" />
          <s:element minOccurs="0" maxOccurs="1" name="TextToSay" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="TryCount" type="s:unsignedByte" />
          <s:element minOccurs="0" maxOccurs="1" name="Licensekey" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Extension" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="TransferNumber" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="NextTryInSeconds" type="s:short" />
          <s:element minOccurs="1" maxOccurs="1" name="TTSRate" type="s:unsignedByte" />
          <s:element minOccurs="1" maxOccurs="1" name="TTSVolume" type="s:unsignedByte" />
          <s:element minOccurs="1" maxOccurs="1" name="ScheduledUTCDatetime" type="s:dateTime" />
          <s:element minOccurs="1" maxOccurs="1" name="ListID" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="DialRecursiveLists" type="s:boolean" />
        </s:sequence>
      </s:complexType>
      <s:element name="LM_DialListAdvancedResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LM_DialListAdvancedResult" type="tns:LM_DialReturn" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_AddNewList">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ListName" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="ParentListID" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_AddNewListResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LM_AddNewListResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_AddListMember">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ListID" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="ClientID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="FirstName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LastName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_AddListMemberResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LM_AddListMemberResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_DeleteList">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ListID" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_DeleteListResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LM_DeleteListResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_DeleteListMember">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ListMemberID" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_DeleteListMemberResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LM_DeleteListMemberResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_AlterListMember">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ListMemberID" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="licensekey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="ClientID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="FirstName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LastName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_AlterListMemberResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LM_AlterListMemberResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_AlterListID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ListID" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="ParentListID" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="ListName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Licensekey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LM_AlterListIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LM_AlterListIDResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetResponseCodes">
        <s:complexType />
      </s:element>
      <s:element name="GetResponseCodesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetResponseCodesResult" type="tns:ArrayOfResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfResponse">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="Response" nillable="true" type="tns:Response" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="Response">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="ResponseCode" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ResponseText" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="GetAvailableAreaCodes">
        <s:complexType />
      </s:element>
      <s:element name="GetAvailableAreaCodesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetAvailableAreaCodesResult" type="tns:ArrayOfAreaCode" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfAreaCode">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="AreaCode" nillable="true" type="tns:AreaCode" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="AreaCode">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="AreaCodeNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Location" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="GetAvailableIncomingNumbers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AreaCodeFilter" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAvailableIncomingNumbersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetAvailableIncomingNumbersResult" type="tns:ArrayOfString" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAssignedNumbers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAssignedNumbersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetAssignedNumbersResult" type="tns:ArrayOfString" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getVoices">
        <s:complexType />
      </s:element>
      <s:element name="getVoicesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getVoicesResult" type="tns:ArrayOfVoice" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfVoice">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="Voice" nillable="true" type="tns:Voice" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="Voice">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="VoiceID" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="VoiceName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="VoiceGender" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="VoiceAge" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="VoiceLanguage" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="VoiceSummary" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="AssignIncomingNumber">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="IncomingPhoneNumber" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AssignIncomingNumberResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="AssignIncomingNumberResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetIncomingCallScript">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Script" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetIncomingCallScriptResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SetIncomingCallScriptResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetIncomingCallScript">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetIncomingCallScriptResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetIncomingCallScriptResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="string" nillable="true" type="s:string" />
      <s:element name="ArrayOfString" nillable="true" type="tns:ArrayOfString" />
      <s:element name="boolean" type="s:boolean" />
      <s:element name="UploadFileResponse" nillable="true" type="tns:UploadFileResponse" />
      <s:element name="double" type="s:double" />
      <s:element name="base64Binary" nillable="true" type="s:base64Binary" />
      <s:element name="NotifyReturn" nillable="true" type="tns:NotifyReturn" />
      <s:element name="ArrayOfNotifyReturn" nillable="true" type="tns:ArrayOfNotifyReturn" />
      <s:element name="int" type="s:int" />
      <s:element name="ArrayOfLM_ListIDs" nillable="true" type="tns:ArrayOfLM_ListIDs" />
      <s:element name="ArrayOfLM_ListMembers" nillable="true" type="tns:ArrayOfLM_ListMembers" />
      <s:element name="LM_DialReturn" type="tns:LM_DialReturn" />
      <s:element name="ArrayOfResponse" nillable="true" type="tns:ArrayOfResponse" />
      <s:element name="ArrayOfAreaCode" nillable="true" type="tns:ArrayOfAreaCode" />
      <s:element name="ArrayOfVoice" nillable="true" type="tns:ArrayOfVoice" />
    </s:schema>
    <s:schema targetNamespace="http://ws.cdyne.com/NotifyWS/AbstractTypes">
      <s:import namespace="http://schemas.xmlsoap.org/soap/encoding/" />
      <s:complexType name="StringArray">
        <s:complexContent mixed="false">
          <s:restriction base="soapenc:Array">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string" />
            </s:sequence>
          </s:restriction>
        </s:complexContent>
      </s:complexType>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetVersionSoapIn">
    <wsdl:part name="parameters" element="tns:GetVersion" />
  </wsdl:message>
  <wsdl:message name="GetVersionSoapOut">
    <wsdl:part name="parameters" element="tns:GetVersionResponse" />
  </wsdl:message>
  <wsdl:message name="ReturnSoundFileIDsSoapIn">
    <wsdl:part name="parameters" element="tns:ReturnSoundFileIDs" />
  </wsdl:message>
  <wsdl:message name="ReturnSoundFileIDsSoapOut">
    <wsdl:part name="parameters" element="tns:ReturnSoundFileIDsResponse" />
  </wsdl:message>
  <wsdl:message name="RemoveSoundFileSoapIn">
    <wsdl:part name="parameters" element="tns:RemoveSoundFile" />
  </wsdl:message>
  <wsdl:message name="RemoveSoundFileSoapOut">
    <wsdl:part name="parameters" element="tns:RemoveSoundFileResponse" />
  </wsdl:message>
  <wsdl:message name="RenameSoundFileSoapIn">
    <wsdl:part name="parameters" element="tns:RenameSoundFile" />
  </wsdl:message>
  <wsdl:message name="RenameSoundFileSoapOut">
    <wsdl:part name="parameters" element="tns:RenameSoundFileResponse" />
  </wsdl:message>
  <wsdl:message name="UploadSoundFileSoapIn">
    <wsdl:part name="parameters" element="tns:UploadSoundFile" />
  </wsdl:message>
  <wsdl:message name="UploadSoundFileSoapOut">
    <wsdl:part name="parameters" element="tns:UploadSoundFileResponse" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileLengthSoapIn">
    <wsdl:part name="parameters" element="tns:GetSoundFileLength" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileLengthSoapOut">
    <wsdl:part name="parameters" element="tns:GetSoundFileLengthResponse" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileSoapIn">
    <wsdl:part name="parameters" element="tns:GetSoundFile" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileSoapOut">
    <wsdl:part name="parameters" element="tns:GetSoundFileResponse" />
  </wsdl:message>
  <wsdl:message name="GetTTSInULAWSoapIn">
    <wsdl:part name="parameters" element="tns:GetTTSInULAW" />
  </wsdl:message>
  <wsdl:message name="GetTTSInULAWSoapOut">
    <wsdl:part name="parameters" element="tns:GetTTSInULAWResponse" />
  </wsdl:message>
  <wsdl:message name="GetTTSInMP3SoapIn">
    <wsdl:part name="parameters" element="tns:GetTTSInMP3" />
  </wsdl:message>
  <wsdl:message name="GetTTSInMP3SoapOut">
    <wsdl:part name="parameters" element="tns:GetTTSInMP3Response" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInMP3SoapIn">
    <wsdl:part name="parameters" element="tns:GetSoundFileInMP3" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInMP3SoapOut">
    <wsdl:part name="parameters" element="tns:GetSoundFileInMP3Response" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileURLSoapIn">
    <wsdl:part name="parameters" element="tns:GetSoundFileURL" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileURLSoapOut">
    <wsdl:part name="parameters" element="tns:GetSoundFileURLResponse" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInUlawSoapIn">
    <wsdl:part name="parameters" element="tns:GetSoundFileInUlaw" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInUlawSoapOut">
    <wsdl:part name="parameters" element="tns:GetSoundFileInUlawResponse" />
  </wsdl:message>
  <wsdl:message name="RecordSoundViaPhoneCallSoapIn">
    <wsdl:part name="parameters" element="tns:RecordSoundViaPhoneCall" />
  </wsdl:message>
  <wsdl:message name="RecordSoundViaPhoneCallSoapOut">
    <wsdl:part name="parameters" element="tns:RecordSoundViaPhoneCallResponse" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusSoapIn">
    <wsdl:part name="parameters" element="tns:GetQueueIDStatus" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusSoapOut">
    <wsdl:part name="parameters" element="tns:GetQueueIDStatusResponse" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusesByPhoneNumberSoapIn">
    <wsdl:part name="parameters" element="tns:GetQueueIDStatusesByPhoneNumber" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusesByPhoneNumberSoapOut">
    <wsdl:part name="parameters" element="tns:GetQueueIDStatusesByPhoneNumberResponse" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusWithAdvancedInfoSoapIn">
    <wsdl:part name="parameters" element="tns:GetQueueIDStatusWithAdvancedInfo" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusWithAdvancedInfoSoapOut">
    <wsdl:part name="parameters" element="tns:GetQueueIDStatusWithAdvancedInfoResponse" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneEnglishBasicSoapIn">
    <wsdl:part name="parameters" element="tns:NotifyPhoneEnglishBasic" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneEnglishBasicSoapOut">
    <wsdl:part name="parameters" element="tns:NotifyPhoneEnglishBasicResponse" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTransferSoapIn">
    <wsdl:part name="parameters" element="tns:NotifyPhoneBasicWithTransfer" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTransferSoapOut">
    <wsdl:part name="parameters" element="tns:NotifyPhoneBasicWithTransferResponse" />
  </wsdl:message>
  <wsdl:message name="GetMultipleQueueIdStatusSoapIn">
    <wsdl:part name="parameters" element="tns:GetMultipleQueueIdStatus" />
  </wsdl:message>
  <wsdl:message name="GetMultipleQueueIdStatusSoapOut">
    <wsdl:part name="parameters" element="tns:GetMultipleQueueIdStatusResponse" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicSoapIn">
    <wsdl:part name="parameters" element="tns:NotifyPhoneBasic" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicSoapOut">
    <wsdl:part name="parameters" element="tns:NotifyPhoneBasicResponse" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTryCountSoapIn">
    <wsdl:part name="parameters" element="tns:NotifyPhoneBasicWithTryCount" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTryCountSoapOut">
    <wsdl:part name="parameters" element="tns:NotifyPhoneBasicWithTryCountResponse" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneAdvancedSoapIn">
    <wsdl:part name="parameters" element="tns:NotifyPhoneAdvanced" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneAdvancedSoapOut">
    <wsdl:part name="parameters" element="tns:NotifyPhoneAdvancedResponse" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicSoapIn">
    <wsdl:part name="parameters" element="tns:NotifyMultiplePhoneBasic" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicSoapOut">
    <wsdl:part name="parameters" element="tns:NotifyMultiplePhoneBasicResponse" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMSoapIn">
    <wsdl:part name="parameters" element="tns:NotifyMultiplePhoneBasicWithCPM" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMSoapOut">
    <wsdl:part name="parameters" element="tns:NotifyMultiplePhoneBasicWithCPMResponse" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMandReferenceIDSoapIn">
    <wsdl:part name="parameters" element="tns:NotifyMultiplePhoneBasicWithCPMandReferenceID" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMandReferenceIDSoapOut">
    <wsdl:part name="parameters" element="tns:NotifyMultiplePhoneBasicWithCPMandReferenceIDResponse" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneAdvancedSoapIn">
    <wsdl:part name="parameters" element="tns:NotifyMultiplePhoneAdvanced" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneAdvancedSoapOut">
    <wsdl:part name="parameters" element="tns:NotifyMultiplePhoneAdvancedResponse" />
  </wsdl:message>
  <wsdl:message name="CancelConferenceSoapIn">
    <wsdl:part name="parameters" element="tns:CancelConference" />
  </wsdl:message>
  <wsdl:message name="CancelConferenceSoapOut">
    <wsdl:part name="parameters" element="tns:CancelConferenceResponse" />
  </wsdl:message>
  <wsdl:message name="CancelNotifySoapIn">
    <wsdl:part name="parameters" element="tns:CancelNotify" />
  </wsdl:message>
  <wsdl:message name="CancelNotifySoapOut">
    <wsdl:part name="parameters" element="tns:CancelNotifyResponse" />
  </wsdl:message>
  <wsdl:message name="CancelNotifyByReferenceIDSoapIn">
    <wsdl:part name="parameters" element="tns:CancelNotifyByReferenceID" />
  </wsdl:message>
  <wsdl:message name="CancelNotifyByReferenceIDSoapOut">
    <wsdl:part name="parameters" element="tns:CancelNotifyByReferenceIDResponse" />
  </wsdl:message>
  <wsdl:message name="ScriptListSoapIn">
    <wsdl:part name="parameters" element="tns:ScriptList" />
  </wsdl:message>
  <wsdl:message name="ScriptListSoapOut">
    <wsdl:part name="parameters" element="tns:ScriptListResponse" />
  </wsdl:message>
  <wsdl:message name="ScriptSaveSoapIn">
    <wsdl:part name="parameters" element="tns:ScriptSave" />
  </wsdl:message>
  <wsdl:message name="ScriptSaveSoapOut">
    <wsdl:part name="parameters" element="tns:ScriptSaveResponse" />
  </wsdl:message>
  <wsdl:message name="ScriptDeleteSoapIn">
    <wsdl:part name="parameters" element="tns:ScriptDelete" />
  </wsdl:message>
  <wsdl:message name="ScriptDeleteSoapOut">
    <wsdl:part name="parameters" element="tns:ScriptDeleteResponse" />
  </wsdl:message>
  <wsdl:message name="ScriptLoadSoapIn">
    <wsdl:part name="parameters" element="tns:ScriptLoad" />
  </wsdl:message>
  <wsdl:message name="ScriptLoadSoapOut">
    <wsdl:part name="parameters" element="tns:ScriptLoadResponse" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableLoadSoapIn">
    <wsdl:part name="parameters" element="tns:LicenseKeyVariableLoad" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableLoadSoapOut">
    <wsdl:part name="parameters" element="tns:LicenseKeyVariableLoadResponse" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableSaveSoapIn">
    <wsdl:part name="parameters" element="tns:LicenseKeyVariableSave" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableSaveSoapOut">
    <wsdl:part name="parameters" element="tns:LicenseKeyVariableSaveResponse" />
  </wsdl:message>
  <wsdl:message name="LM_GetListIDsByLicensekeySoapIn">
    <wsdl:part name="parameters" element="tns:LM_GetListIDsByLicensekey" />
  </wsdl:message>
  <wsdl:message name="LM_GetListIDsByLicensekeySoapOut">
    <wsdl:part name="parameters" element="tns:LM_GetListIDsByLicensekeyResponse" />
  </wsdl:message>
  <wsdl:message name="LM_GetListMembersByListIDSoapIn">
    <wsdl:part name="parameters" element="tns:LM_GetListMembersByListID" />
  </wsdl:message>
  <wsdl:message name="LM_GetListMembersByListIDSoapOut">
    <wsdl:part name="parameters" element="tns:LM_GetListMembersByListIDResponse" />
  </wsdl:message>
  <wsdl:message name="LM_DialListSoapIn">
    <wsdl:part name="parameters" element="tns:LM_DialList" />
  </wsdl:message>
  <wsdl:message name="LM_DialListSoapOut">
    <wsdl:part name="parameters" element="tns:LM_DialListResponse" />
  </wsdl:message>
  <wsdl:message name="LM_DialListAdvancedSoapIn">
    <wsdl:part name="parameters" element="tns:LM_DialListAdvanced" />
  </wsdl:message>
  <wsdl:message name="LM_DialListAdvancedSoapOut">
    <wsdl:part name="parameters" element="tns:LM_DialListAdvancedResponse" />
  </wsdl:message>
  <wsdl:message name="LM_AddNewListSoapIn">
    <wsdl:part name="parameters" element="tns:LM_AddNewList" />
  </wsdl:message>
  <wsdl:message name="LM_AddNewListSoapOut">
    <wsdl:part name="parameters" element="tns:LM_AddNewListResponse" />
  </wsdl:message>
  <wsdl:message name="LM_AddListMemberSoapIn">
    <wsdl:part name="parameters" element="tns:LM_AddListMember" />
  </wsdl:message>
  <wsdl:message name="LM_AddListMemberSoapOut">
    <wsdl:part name="parameters" element="tns:LM_AddListMemberResponse" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListSoapIn">
    <wsdl:part name="parameters" element="tns:LM_DeleteList" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListSoapOut">
    <wsdl:part name="parameters" element="tns:LM_DeleteListResponse" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListMemberSoapIn">
    <wsdl:part name="parameters" element="tns:LM_DeleteListMember" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListMemberSoapOut">
    <wsdl:part name="parameters" element="tns:LM_DeleteListMemberResponse" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListMemberSoapIn">
    <wsdl:part name="parameters" element="tns:LM_AlterListMember" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListMemberSoapOut">
    <wsdl:part name="parameters" element="tns:LM_AlterListMemberResponse" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListIDSoapIn">
    <wsdl:part name="parameters" element="tns:LM_AlterListID" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListIDSoapOut">
    <wsdl:part name="parameters" element="tns:LM_AlterListIDResponse" />
  </wsdl:message>
  <wsdl:message name="GetResponseCodesSoapIn">
    <wsdl:part name="parameters" element="tns:GetResponseCodes" />
  </wsdl:message>
  <wsdl:message name="GetResponseCodesSoapOut">
    <wsdl:part name="parameters" element="tns:GetResponseCodesResponse" />
  </wsdl:message>
  <wsdl:message name="GetAvailableAreaCodesSoapIn">
    <wsdl:part name="parameters" element="tns:GetAvailableAreaCodes" />
  </wsdl:message>
  <wsdl:message name="GetAvailableAreaCodesSoapOut">
    <wsdl:part name="parameters" element="tns:GetAvailableAreaCodesResponse" />
  </wsdl:message>
  <wsdl:message name="GetAvailableIncomingNumbersSoapIn">
    <wsdl:part name="parameters" element="tns:GetAvailableIncomingNumbers" />
  </wsdl:message>
  <wsdl:message name="GetAvailableIncomingNumbersSoapOut">
    <wsdl:part name="parameters" element="tns:GetAvailableIncomingNumbersResponse" />
  </wsdl:message>
  <wsdl:message name="GetAssignedNumbersSoapIn">
    <wsdl:part name="parameters" element="tns:GetAssignedNumbers" />
  </wsdl:message>
  <wsdl:message name="GetAssignedNumbersSoapOut">
    <wsdl:part name="parameters" element="tns:GetAssignedNumbersResponse" />
  </wsdl:message>
  <wsdl:message name="getVoicesSoapIn">
    <wsdl:part name="parameters" element="tns:getVoices" />
  </wsdl:message>
  <wsdl:message name="getVoicesSoapOut">
    <wsdl:part name="parameters" element="tns:getVoicesResponse" />
  </wsdl:message>
  <wsdl:message name="AssignIncomingNumberSoapIn">
    <wsdl:part name="parameters" element="tns:AssignIncomingNumber" />
  </wsdl:message>
  <wsdl:message name="AssignIncomingNumberSoapOut">
    <wsdl:part name="parameters" element="tns:AssignIncomingNumberResponse" />
  </wsdl:message>
  <wsdl:message name="SetIncomingCallScriptSoapIn">
    <wsdl:part name="parameters" element="tns:SetIncomingCallScript" />
  </wsdl:message>
  <wsdl:message name="SetIncomingCallScriptSoapOut">
    <wsdl:part name="parameters" element="tns:SetIncomingCallScriptResponse" />
  </wsdl:message>
  <wsdl:message name="GetIncomingCallScriptSoapIn">
    <wsdl:part name="parameters" element="tns:GetIncomingCallScript" />
  </wsdl:message>
  <wsdl:message name="GetIncomingCallScriptSoapOut">
    <wsdl:part name="parameters" element="tns:GetIncomingCallScriptResponse" />
  </wsdl:message>
  <wsdl:message name="GetVersionHttpGetIn" />
  <wsdl:message name="GetVersionHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="ReturnSoundFileIDsHttpGetIn">
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ReturnSoundFileIDsHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfString" />
  </wsdl:message>
  <wsdl:message name="RemoveSoundFileHttpGetIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="RemoveSoundFileHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="RenameSoundFileHttpGetIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="NewSoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="RenameSoundFileHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="UploadSoundFileHttpGetIn">
    <wsdl:part name="FileBinary" type="s1:StringArray" />
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="UploadSoundFileHttpGetOut">
    <wsdl:part name="Body" element="tns:UploadFileResponse" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileLengthHttpGetIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileLengthHttpGetOut">
    <wsdl:part name="Body" element="tns:double" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileHttpGetIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileHttpGetOut">
    <wsdl:part name="Body" element="tns:base64Binary" />
  </wsdl:message>
  <wsdl:message name="GetTTSInULAWHttpGetIn">
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="TTSrate" type="s:string" />
    <wsdl:part name="TTSvolume" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetTTSInULAWHttpGetOut">
    <wsdl:part name="Body" element="tns:base64Binary" />
  </wsdl:message>
  <wsdl:message name="GetTTSInMP3HttpGetIn">
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="BitRate" type="s:string" />
    <wsdl:part name="TTSrate" type="s:string" />
    <wsdl:part name="TTSvolume" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetTTSInMP3HttpGetOut">
    <wsdl:part name="Body" element="tns:base64Binary" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInMP3HttpGetIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="BitRate" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInMP3HttpGetOut">
    <wsdl:part name="Body" element="tns:base64Binary" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileURLHttpGetIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileURLHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInUlawHttpGetIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInUlawHttpGetOut">
    <wsdl:part name="Body" element="tns:base64Binary" />
  </wsdl:message>
  <wsdl:message name="RecordSoundViaPhoneCallHttpGetIn">
    <wsdl:part name="PhoneNumberToDial" type="s:string" />
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="RecordSoundViaPhoneCallHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusHttpGetIn">
    <wsdl:part name="QueueID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusHttpGetOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusesByPhoneNumberHttpGetIn">
    <wsdl:part name="PhoneNumber" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusesByPhoneNumberHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfNotifyReturn" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusWithAdvancedInfoHttpGetIn">
    <wsdl:part name="QueueID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusWithAdvancedInfoHttpGetOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneEnglishBasicHttpGetIn">
    <wsdl:part name="PhoneNumberToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneEnglishBasicHttpGetOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTransferHttpGetIn">
    <wsdl:part name="PhoneNumberToDial" type="s:string" />
    <wsdl:part name="TransferNumber" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTransferHttpGetOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="GetMultipleQueueIdStatusHttpGetIn">
    <wsdl:part name="QueueIDs" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetMultipleQueueIdStatusHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfNotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicHttpGetIn">
    <wsdl:part name="PhoneNumberToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicHttpGetOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTryCountHttpGetIn">
    <wsdl:part name="TryCount" type="s:string" />
    <wsdl:part name="PhoneNumberToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTryCountHttpGetOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicHttpGetIn">
    <wsdl:part name="PhoneNumbersToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfNotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMHttpGetIn">
    <wsdl:part name="PhoneNumbersToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="CallsPerMinute" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfNotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMandReferenceIDHttpGetIn">
    <wsdl:part name="PhoneNumbersToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="CallsPerMinute" type="s:string" />
    <wsdl:part name="ReferenceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMandReferenceIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfNotifyReturn" />
  </wsdl:message>
  <wsdl:message name="CancelConferenceHttpGetIn">
    <wsdl:part name="ConferenceKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelConferenceHttpGetOut" />
  <wsdl:message name="CancelNotifyHttpGetIn">
    <wsdl:part name="QueueID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelNotifyHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="CancelNotifyByReferenceIDHttpGetIn">
    <wsdl:part name="ReferenceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelNotifyByReferenceIDHttpGetOut">
    <wsdl:part name="Body" element="tns:int" />
  </wsdl:message>
  <wsdl:message name="ScriptListHttpGetIn">
    <wsdl:part name="IncludeGlobalScripts" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ScriptListHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfString" />
  </wsdl:message>
  <wsdl:message name="ScriptSaveHttpGetIn">
    <wsdl:part name="ScriptName" type="s:string" />
    <wsdl:part name="ScriptText" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ScriptSaveHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="ScriptDeleteHttpGetIn">
    <wsdl:part name="ScriptName" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ScriptDeleteHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="ScriptLoadHttpGetIn">
    <wsdl:part name="ScriptName" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ScriptLoadHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableLoadHttpGetIn">
    <wsdl:part name="VariableName" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableLoadHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableSaveHttpGetIn">
    <wsdl:part name="VariableName" type="s:string" />
    <wsdl:part name="VariableValue" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableSaveHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="LM_GetListIDsByLicensekeyHttpGetIn">
    <wsdl:part name="licensekey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_GetListIDsByLicensekeyHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfLM_ListIDs" />
  </wsdl:message>
  <wsdl:message name="LM_GetListMembersByListIDHttpGetIn">
    <wsdl:part name="ListID" type="s:string" />
    <wsdl:part name="Licensekey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_GetListMembersByListIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfLM_ListMembers" />
  </wsdl:message>
  <wsdl:message name="LM_DialListHttpGetIn">
    <wsdl:part name="ListID" type="s:string" />
    <wsdl:part name="DialRecursiveLists" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDName" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_DialListHttpGetOut">
    <wsdl:part name="Body" element="tns:LM_DialReturn" />
  </wsdl:message>
  <wsdl:message name="LM_AddNewListHttpGetIn">
    <wsdl:part name="ListName" type="s:string" />
    <wsdl:part name="ParentListID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_AddNewListHttpGetOut">
    <wsdl:part name="Body" element="tns:int" />
  </wsdl:message>
  <wsdl:message name="LM_AddListMemberHttpGetIn">
    <wsdl:part name="ListID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="PhoneNumber" type="s:string" />
    <wsdl:part name="ClientID" type="s:string" />
    <wsdl:part name="FirstName" type="s:string" />
    <wsdl:part name="LastName" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_AddListMemberHttpGetOut">
    <wsdl:part name="Body" element="tns:int" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListHttpGetIn">
    <wsdl:part name="ListID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListMemberHttpGetIn">
    <wsdl:part name="ListMemberID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListMemberHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListMemberHttpGetIn">
    <wsdl:part name="ListMemberID" type="s:string" />
    <wsdl:part name="licensekey" type="s:string" />
    <wsdl:part name="ClientID" type="s:string" />
    <wsdl:part name="FirstName" type="s:string" />
    <wsdl:part name="LastName" type="s:string" />
    <wsdl:part name="PhoneNumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListMemberHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListIDHttpGetIn">
    <wsdl:part name="ListID" type="s:string" />
    <wsdl:part name="ParentListID" type="s:string" />
    <wsdl:part name="ListName" type="s:string" />
    <wsdl:part name="Licensekey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListIDHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetResponseCodesHttpGetIn" />
  <wsdl:message name="GetResponseCodesHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfResponse" />
  </wsdl:message>
  <wsdl:message name="GetAvailableAreaCodesHttpGetIn" />
  <wsdl:message name="GetAvailableAreaCodesHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfAreaCode" />
  </wsdl:message>
  <wsdl:message name="GetAvailableIncomingNumbersHttpGetIn">
    <wsdl:part name="AreaCodeFilter" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAvailableIncomingNumbersHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfString" />
  </wsdl:message>
  <wsdl:message name="GetAssignedNumbersHttpGetIn">
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAssignedNumbersHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfString" />
  </wsdl:message>
  <wsdl:message name="getVoicesHttpGetIn" />
  <wsdl:message name="getVoicesHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfVoice" />
  </wsdl:message>
  <wsdl:message name="AssignIncomingNumberHttpGetIn">
    <wsdl:part name="IncomingPhoneNumber" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="AssignIncomingNumberHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="SetIncomingCallScriptHttpGetIn">
    <wsdl:part name="PhoneNumber" type="s:string" />
    <wsdl:part name="Script" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="SetIncomingCallScriptHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetIncomingCallScriptHttpGetIn">
    <wsdl:part name="PhoneNumber" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetIncomingCallScriptHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetVersionHttpPostIn" />
  <wsdl:message name="GetVersionHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="ReturnSoundFileIDsHttpPostIn">
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ReturnSoundFileIDsHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfString" />
  </wsdl:message>
  <wsdl:message name="RemoveSoundFileHttpPostIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="RemoveSoundFileHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="RenameSoundFileHttpPostIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="NewSoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="RenameSoundFileHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="UploadSoundFileHttpPostIn">
    <wsdl:part name="FileBinary" type="s1:StringArray" />
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="UploadSoundFileHttpPostOut">
    <wsdl:part name="Body" element="tns:UploadFileResponse" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileLengthHttpPostIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileLengthHttpPostOut">
    <wsdl:part name="Body" element="tns:double" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileHttpPostIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileHttpPostOut">
    <wsdl:part name="Body" element="tns:base64Binary" />
  </wsdl:message>
  <wsdl:message name="GetTTSInULAWHttpPostIn">
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="TTSrate" type="s:string" />
    <wsdl:part name="TTSvolume" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetTTSInULAWHttpPostOut">
    <wsdl:part name="Body" element="tns:base64Binary" />
  </wsdl:message>
  <wsdl:message name="GetTTSInMP3HttpPostIn">
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="BitRate" type="s:string" />
    <wsdl:part name="TTSrate" type="s:string" />
    <wsdl:part name="TTSvolume" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetTTSInMP3HttpPostOut">
    <wsdl:part name="Body" element="tns:base64Binary" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInMP3HttpPostIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="BitRate" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInMP3HttpPostOut">
    <wsdl:part name="Body" element="tns:base64Binary" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileURLHttpPostIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileURLHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInUlawHttpPostIn">
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSoundFileInUlawHttpPostOut">
    <wsdl:part name="Body" element="tns:base64Binary" />
  </wsdl:message>
  <wsdl:message name="RecordSoundViaPhoneCallHttpPostIn">
    <wsdl:part name="PhoneNumberToDial" type="s:string" />
    <wsdl:part name="SoundFileID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="RecordSoundViaPhoneCallHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusHttpPostIn">
    <wsdl:part name="QueueID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusHttpPostOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusesByPhoneNumberHttpPostIn">
    <wsdl:part name="PhoneNumber" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusesByPhoneNumberHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfNotifyReturn" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusWithAdvancedInfoHttpPostIn">
    <wsdl:part name="QueueID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetQueueIDStatusWithAdvancedInfoHttpPostOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneEnglishBasicHttpPostIn">
    <wsdl:part name="PhoneNumberToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneEnglishBasicHttpPostOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTransferHttpPostIn">
    <wsdl:part name="PhoneNumberToDial" type="s:string" />
    <wsdl:part name="TransferNumber" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTransferHttpPostOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="GetMultipleQueueIdStatusHttpPostIn">
    <wsdl:part name="QueueIDs" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetMultipleQueueIdStatusHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfNotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicHttpPostIn">
    <wsdl:part name="PhoneNumberToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicHttpPostOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTryCountHttpPostIn">
    <wsdl:part name="TryCount" type="s:string" />
    <wsdl:part name="PhoneNumberToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyPhoneBasicWithTryCountHttpPostOut">
    <wsdl:part name="Body" element="tns:NotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicHttpPostIn">
    <wsdl:part name="PhoneNumbersToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfNotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMHttpPostIn">
    <wsdl:part name="PhoneNumbersToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="CallsPerMinute" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfNotifyReturn" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMandReferenceIDHttpPostIn">
    <wsdl:part name="PhoneNumbersToDial" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDname" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="CallsPerMinute" type="s:string" />
    <wsdl:part name="ReferenceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NotifyMultiplePhoneBasicWithCPMandReferenceIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfNotifyReturn" />
  </wsdl:message>
  <wsdl:message name="CancelConferenceHttpPostIn">
    <wsdl:part name="ConferenceKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelConferenceHttpPostOut" />
  <wsdl:message name="CancelNotifyHttpPostIn">
    <wsdl:part name="QueueID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelNotifyHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="CancelNotifyByReferenceIDHttpPostIn">
    <wsdl:part name="ReferenceID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelNotifyByReferenceIDHttpPostOut">
    <wsdl:part name="Body" element="tns:int" />
  </wsdl:message>
  <wsdl:message name="ScriptListHttpPostIn">
    <wsdl:part name="IncludeGlobalScripts" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ScriptListHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfString" />
  </wsdl:message>
  <wsdl:message name="ScriptSaveHttpPostIn">
    <wsdl:part name="ScriptName" type="s:string" />
    <wsdl:part name="ScriptText" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ScriptSaveHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="ScriptDeleteHttpPostIn">
    <wsdl:part name="ScriptName" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ScriptDeleteHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="ScriptLoadHttpPostIn">
    <wsdl:part name="ScriptName" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ScriptLoadHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableLoadHttpPostIn">
    <wsdl:part name="VariableName" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableLoadHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableSaveHttpPostIn">
    <wsdl:part name="VariableName" type="s:string" />
    <wsdl:part name="VariableValue" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LicenseKeyVariableSaveHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="LM_GetListIDsByLicensekeyHttpPostIn">
    <wsdl:part name="licensekey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_GetListIDsByLicensekeyHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfLM_ListIDs" />
  </wsdl:message>
  <wsdl:message name="LM_GetListMembersByListIDHttpPostIn">
    <wsdl:part name="ListID" type="s:string" />
    <wsdl:part name="Licensekey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_GetListMembersByListIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfLM_ListMembers" />
  </wsdl:message>
  <wsdl:message name="LM_DialListHttpPostIn">
    <wsdl:part name="ListID" type="s:string" />
    <wsdl:part name="DialRecursiveLists" type="s:string" />
    <wsdl:part name="CallerID" type="s:string" />
    <wsdl:part name="CallerIDName" type="s:string" />
    <wsdl:part name="VoiceID" type="s:string" />
    <wsdl:part name="TextToSay" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_DialListHttpPostOut">
    <wsdl:part name="Body" element="tns:LM_DialReturn" />
  </wsdl:message>
  <wsdl:message name="LM_AddNewListHttpPostIn">
    <wsdl:part name="ListName" type="s:string" />
    <wsdl:part name="ParentListID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_AddNewListHttpPostOut">
    <wsdl:part name="Body" element="tns:int" />
  </wsdl:message>
  <wsdl:message name="LM_AddListMemberHttpPostIn">
    <wsdl:part name="ListID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="PhoneNumber" type="s:string" />
    <wsdl:part name="ClientID" type="s:string" />
    <wsdl:part name="FirstName" type="s:string" />
    <wsdl:part name="LastName" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_AddListMemberHttpPostOut">
    <wsdl:part name="Body" element="tns:int" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListHttpPostIn">
    <wsdl:part name="ListID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListMemberHttpPostIn">
    <wsdl:part name="ListMemberID" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_DeleteListMemberHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListMemberHttpPostIn">
    <wsdl:part name="ListMemberID" type="s:string" />
    <wsdl:part name="licensekey" type="s:string" />
    <wsdl:part name="ClientID" type="s:string" />
    <wsdl:part name="FirstName" type="s:string" />
    <wsdl:part name="LastName" type="s:string" />
    <wsdl:part name="PhoneNumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListMemberHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListIDHttpPostIn">
    <wsdl:part name="ListID" type="s:string" />
    <wsdl:part name="ParentListID" type="s:string" />
    <wsdl:part name="ListName" type="s:string" />
    <wsdl:part name="Licensekey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LM_AlterListIDHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetResponseCodesHttpPostIn" />
  <wsdl:message name="GetResponseCodesHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfResponse" />
  </wsdl:message>
  <wsdl:message name="GetAvailableAreaCodesHttpPostIn" />
  <wsdl:message name="GetAvailableAreaCodesHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfAreaCode" />
  </wsdl:message>
  <wsdl:message name="GetAvailableIncomingNumbersHttpPostIn">
    <wsdl:part name="AreaCodeFilter" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAvailableIncomingNumbersHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfString" />
  </wsdl:message>
  <wsdl:message name="GetAssignedNumbersHttpPostIn">
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAssignedNumbersHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfString" />
  </wsdl:message>
  <wsdl:message name="getVoicesHttpPostIn" />
  <wsdl:message name="getVoicesHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfVoice" />
  </wsdl:message>
  <wsdl:message name="AssignIncomingNumberHttpPostIn">
    <wsdl:part name="IncomingPhoneNumber" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="AssignIncomingNumberHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="SetIncomingCallScriptHttpPostIn">
    <wsdl:part name="PhoneNumber" type="s:string" />
    <wsdl:part name="Script" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="SetIncomingCallScriptHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetIncomingCallScriptHttpPostIn">
    <wsdl:part name="PhoneNumber" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetIncomingCallScriptHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:portType name="PhoneNotifySoap">
    <wsdl:operation name="GetVersion">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method returns CDYNE Version information</wsdl:documentation>
      <wsdl:input message="tns:GetVersionSoapIn" />
      <wsdl:output message="tns:GetVersionSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ReturnSoundFileIDs">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get available sound files that you can add to your stream via a license key. (free)</wsdl:documentation>
      <wsdl:input message="tns:ReturnSoundFileIDsSoapIn" />
      <wsdl:output message="tns:ReturnSoundFileIDsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="RemoveSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file delete. (free)</wsdl:documentation>
      <wsdl:input message="tns:RemoveSoundFileSoapIn" />
      <wsdl:output message="tns:RemoveSoundFileSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="RenameSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file rename. (free)</wsdl:documentation>
      <wsdl:input message="tns:RenameSoundFileSoapIn" />
      <wsdl:output message="tns:RenameSoundFileSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="UploadSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file upload.  Our system accepts WAV (PCM, U-law, A-law, MS ADPCM) Files.  We plan on adding more very soon.&lt;br&gt;To use the sound file in the notify put ~ around it and start it with a ^.Example "Hello ~^soundfile~, you are cool."(This would text to speech Hello and you are cool,adding the sound file in the middle). (free)</wsdl:documentation>
      <wsdl:input message="tns:UploadSoundFileSoapIn" />
      <wsdl:output message="tns:UploadSoundFileSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileLength">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets a Sound File length in Seconds. (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileLengthSoapIn" />
      <wsdl:output message="tns:GetSoundFileLengthSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval. (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileSoapIn" />
      <wsdl:output message="tns:GetSoundFileSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTTSInULAW">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to convert text into a ULAW encoded sound file.  (May require an additional License Key)</wsdl:documentation>
      <wsdl:input message="tns:GetTTSInULAWSoapIn" />
      <wsdl:output message="tns:GetTTSInULAWSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTTSInMP3">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to convert text into a MP3 encoded sound file. (returns an MP3 encoded in 32,64, or 128). (May require a additional License Key)</wsdl:documentation>
      <wsdl:input message="tns:GetTTSInMP3SoapIn" />
      <wsdl:output message="tns:GetTTSInMP3SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInMP3">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval (returns an MP3 encoded in 32,64, or 128). (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileInMP3SoapIn" />
      <wsdl:output message="tns:GetSoundFileInMP3SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileURL">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval.  Returns a URL to Listen to a particular Sound File in MP3 (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileURLSoapIn" />
      <wsdl:output message="tns:GetSoundFileURLSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInUlaw">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval (returns ULAW encoded file). (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileInUlawSoapIn" />
      <wsdl:output message="tns:GetSoundFileInUlawSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="RecordSoundViaPhoneCall">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Request the system to call you to record a sound file. SoundfileIDs can only be lowercase and contain normal file characters.  The CallerIDName will be the SoundFileID and the number will be 8000000000.</wsdl:documentation>
      <wsdl:input message="tns:RecordSoundViaPhoneCallSoapIn" />
      <wsdl:output message="tns:RecordSoundViaPhoneCallSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatus">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns a status on a particular QueueID.</wsdl:documentation>
      <wsdl:input message="tns:GetQueueIDStatusSoapIn" />
      <wsdl:output message="tns:GetQueueIDStatusSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusesByPhoneNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the last 10 phone notifications for a particular phone number.</wsdl:documentation>
      <wsdl:input message="tns:GetQueueIDStatusesByPhoneNumberSoapIn" />
      <wsdl:output message="tns:GetQueueIDStatusesByPhoneNumberSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusWithAdvancedInfo">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns a status on a particular QueueID.  This also includes Variable information and more.</wsdl:documentation>
      <wsdl:input message="tns:GetQueueIDStatusWithAdvancedInfoSoapIn" />
      <wsdl:output message="tns:GetQueueIDStatusWithAdvancedInfoSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneEnglishBasic">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call any phone number in the US/Canada and read the TextToSay to that phone number using the voice of Diane (voiceid: 0). PhoneNumberToDial must be filled in (They can be in any format as long as there is 10 digits).&lt;br&gt;A reminder about abuse:  &lt;b&gt;Threats and illegal activity can be shared with the authorities.&lt;/b&gt;&lt;br&gt;Use a LicenseKey of 0 for testing.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneEnglishBasicSoapIn" />
      <wsdl:output message="tns:NotifyPhoneEnglishBasicSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTransfer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;You must have a valid CDYNE key to use this.  Please test with our other methods.&lt;/b&gt;  This Method is exactly like the NotifyPhoneBasic with one exception.  It allows you to transfer a call by pressing 0.  Put the Transfer phone number in TransferNumberToOnDigit.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneBasicWithTransferSoapIn" />
      <wsdl:output message="tns:NotifyPhoneBasicWithTransferSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetMultipleQueueIdStatus">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method returns information about the status of multiple notifies via queueid (delimited by a semicolon).  This transaction is free, but does require a valid licensekey.</wsdl:documentation>
      <wsdl:input message="tns:GetMultipleQueueIdStatusSoapIn" />
      <wsdl:output message="tns:GetMultipleQueueIdStatusSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasic">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call any phone number in the US/Canada and read the TextToSay to that phone number. &lt;br&gt;Set VoiceID equal to 0 for TTS Diane to speak the Text.  For a list of Voices with their ID look at getVoices. PhoneNumberToDial and CallerID must be filled in (They can be in any format as long as there is 10 digits).&lt;br&gt;A reminder about abuse:  &lt;b&gt;Threats and illegal activity can be shared with the authorities.&lt;/b&gt;&lt;br&gt;Use a LicenseKey of 0 for testing.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneBasicSoapIn" />
      <wsdl:output message="tns:NotifyPhoneBasicSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTryCount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Same as NotifyPhoneBasic with a number of times it will retry the call.  The max is 3.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneBasicWithTryCountSoapIn" />
      <wsdl:output message="tns:NotifyPhoneBasicWithTryCountSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneAdvanced">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to control the notifies with a class.  This allows for the maximum combinations of using notify.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneAdvancedSoapIn" />
      <wsdl:output message="tns:NotifyPhoneAdvancedSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasic">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call phone numbers with a default of 3000 calls per minute. (delimited by a semicolon) in the US/Canada and read the TextToSay to that phone number.  You must use a license key for this function.  Your billing will be charged per phone number.</wsdl:documentation>
      <wsdl:input message="tns:NotifyMultiplePhoneBasicSoapIn" />
      <wsdl:output message="tns:NotifyMultiplePhoneBasicSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPM">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call phone numbers with a way to set calls per minute. (delimited by a semicolon) in the US/Canada and read the TextToSay to that phone number.  You must use a license key for this function.  Your billing will be charged per phone number.</wsdl:documentation>
      <wsdl:input message="tns:NotifyMultiplePhoneBasicWithCPMSoapIn" />
      <wsdl:output message="tns:NotifyMultiplePhoneBasicWithCPMSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPMandReferenceID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call phone numbers with a way to set calls per minute. (delimited by a semicolon) in the US/Canada and read the TextToSay to that phone number.  You must use a license key for this function.  Your billing will be charged per phone number.</wsdl:documentation>
      <wsdl:input message="tns:NotifyMultiplePhoneBasicWithCPMandReferenceIDSoapIn" />
      <wsdl:output message="tns:NotifyMultiplePhoneBasicWithCPMandReferenceIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneAdvanced">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to control the notifies with a class.  This Function allows Multiple Notifies to be sent in one send.  This allows for the maximum combinations of using notify.  We suggest using our list management features for Notify batches over 100.</wsdl:documentation>
      <wsdl:input message="tns:NotifyMultiplePhoneAdvancedSoapIn" />
      <wsdl:output message="tns:NotifyMultiplePhoneAdvancedSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelConference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancels/Kills a Conference by a Conference Key</wsdl:documentation>
      <wsdl:input message="tns:CancelConferenceSoapIn" />
      <wsdl:output message="tns:CancelConferenceSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelNotify">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancels a single notify.  This will not cancel completed calls or calls in progress.  You will credited for any successfully cancelled notify that returns a true.</wsdl:documentation>
      <wsdl:input message="tns:CancelNotifySoapIn" />
      <wsdl:output message="tns:CancelNotifySoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelNotifyByReferenceID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancels a batch notify by ReferenceID.  This will not cancel completed calls or calls in progress.  You will credited for any successfully cancelled notifies and that number will return greater than zero.</wsdl:documentation>
      <wsdl:input message="tns:CancelNotifyByReferenceIDSoapIn" />
      <wsdl:output message="tns:CancelNotifyByReferenceIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Lists the scripts belonging to a license key.  Set IncludeGlobalScripts to true if you would like CDYNE global scripts to be included.</wsdl:documentation>
      <wsdl:input message="tns:ScriptListSoapIn" />
      <wsdl:output message="tns:ScriptListSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptSave">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Save a script (Scriptname can only be 50 characters or less).  Saving a script with an existing name will overwrite the old script.</wsdl:documentation>
      <wsdl:input message="tns:ScriptSaveSoapIn" />
      <wsdl:output message="tns:ScriptSaveSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptDelete">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Delete a script</wsdl:documentation>
      <wsdl:input message="tns:ScriptDeleteSoapIn" />
      <wsdl:output message="tns:ScriptDeleteSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptLoad">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Load a script's text</wsdl:documentation>
      <wsdl:input message="tns:ScriptLoadSoapIn" />
      <wsdl:output message="tns:ScriptLoadSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableLoad">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Variable Management - Load a key's variable (The Variable name can be up to 50 characters long).</wsdl:documentation>
      <wsdl:input message="tns:LicenseKeyVariableLoadSoapIn" />
      <wsdl:output message="tns:LicenseKeyVariableLoadSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableSave">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Variable Management - Save a variable (VariableName can only be 50 characters or less).  Saving a Variable with an existing name will overwrite the old Variable.  Saving a blank value will delete the variable.</wsdl:documentation>
      <wsdl:input message="tns:LicenseKeyVariableSaveSoapIn" />
      <wsdl:output message="tns:LicenseKeyVariableSaveSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_GetListIDsByLicensekey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Obtains all the list IDs from a specific License key.</wsdl:documentation>
      <wsdl:input message="tns:LM_GetListIDsByLicensekeySoapIn" />
      <wsdl:output message="tns:LM_GetListIDsByLicensekeySoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_GetListMembersByListID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Gets all the phone numbers with their first and last names.</wsdl:documentation>
      <wsdl:input message="tns:LM_GetListMembersByListIDSoapIn" />
      <wsdl:output message="tns:LM_GetListMembersByListIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_DialList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Dial a List by ListID.  Returns a Batch ID for the list and begins dialing at the scheduled time.  Scheduled times are in UTC. For more information visit: &lt;a href="http://wiki.cdyne.com/wiki/index.php?title=Phone_Notify%21_LM_DialList"&gt;http://wiki.cdyne.com/wiki/index.php?title=Phone_Notify%21_LM_DialList&lt;/a&gt;</wsdl:documentation>
      <wsdl:input message="tns:LM_DialListSoapIn" />
      <wsdl:output message="tns:LM_DialListSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_DialListAdvanced">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Dial a list by ListID that allows you to set more advanced properties.</wsdl:documentation>
      <wsdl:input message="tns:LM_DialListAdvancedSoapIn" />
      <wsdl:output message="tns:LM_DialListAdvancedSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AddNewList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you to add a list that can contain members (Contacts).  You can also attach this list to be apart of a Parent List, otherwise leave ParentList ID = 0.</wsdl:documentation>
      <wsdl:input message="tns:LM_AddNewListSoapIn" />
      <wsdl:output message="tns:LM_AddNewListSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AddListMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you to add contacts to a List.  You will need the listid.  The only required fields are ListID, PhoneNumber, and LicenseKey.  Returns a List Member ID.</wsdl:documentation>
      <wsdl:input message="tns:LM_AddListMemberSoapIn" />
      <wsdl:output message="tns:LM_AddListMemberSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Deletes a List and it's sub-lists (The lists that have is as a ParentListID).</wsdl:documentation>
      <wsdl:input message="tns:LM_DeleteListSoapIn" />
      <wsdl:output message="tns:LM_DeleteListSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteListMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Deletes a List's Member (or contact)</wsdl:documentation>
      <wsdl:input message="tns:LM_DeleteListMemberSoapIn" />
      <wsdl:output message="tns:LM_DeleteListMemberSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you alter a ListMember</wsdl:documentation>
      <wsdl:input message="tns:LM_AlterListMemberSoapIn" />
      <wsdl:output message="tns:LM_AlterListMemberSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you alter a ListMember, use 0 if you do not want to have a ParentListID, and -1 if you do not wish to change the ParentListID</wsdl:documentation>
      <wsdl:input message="tns:LM_AlterListIDSoapIn" />
      <wsdl:output message="tns:LM_AlterListIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetResponseCodes">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will list all of the Response Codes.</wsdl:documentation>
      <wsdl:input message="tns:GetResponseCodesSoapIn" />
      <wsdl:output message="tns:GetResponseCodesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAvailableAreaCodes">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method returns all the available area codes in our system.  Please contact info@cdyne.com if you need more listed.</wsdl:documentation>
      <wsdl:input message="tns:GetAvailableAreaCodesSoapIn" />
      <wsdl:output message="tns:GetAvailableAreaCodesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAvailableIncomingNumbers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will list a random 10 lines available for incoming calls.  You can assign these lines via the AssignIncomingNumber method to your license key.  You can leave the area code field blank to get any available toll-free lines (888 and 877 numbers are currently the most common).</wsdl:documentation>
      <wsdl:input message="tns:GetAvailableIncomingNumbersSoapIn" />
      <wsdl:output message="tns:GetAvailableIncomingNumbersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAssignedNumbers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets a list of Incoming Numbers assigned to a LicenseKey</wsdl:documentation>
      <wsdl:input message="tns:GetAssignedNumbersSoapIn" />
      <wsdl:output message="tns:GetAssignedNumbersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getVoices">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will list all the voices available for your notification. Use the VoiceID for the Notification Methods</wsdl:documentation>
      <wsdl:input message="tns:getVoicesSoapIn" />
      <wsdl:output message="tns:getVoicesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AssignIncomingNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will assign a Incoming Number to a License Key.  Returns true if assignment is successful.  Returns false if the number is claimed or not available.  Numbers are billed at $5/month per number.  Normal fees for transactions apply.</wsdl:documentation>
      <wsdl:input message="tns:AssignIncomingNumberSoapIn" />
      <wsdl:output message="tns:AssignIncomingNumberSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetIncomingCallScript">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to update a Call Script for incoming calls.  You must have incoming phone numbers set by CDYNE Staff.</wsdl:documentation>
      <wsdl:input message="tns:SetIncomingCallScriptSoapIn" />
      <wsdl:output message="tns:SetIncomingCallScriptSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetIncomingCallScript">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to get the Call Script for incoming calls for a particular number.  You must have incoming phone numbers set by CDYNE Staff.</wsdl:documentation>
      <wsdl:input message="tns:GetIncomingCallScriptSoapIn" />
      <wsdl:output message="tns:GetIncomingCallScriptSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="PhoneNotifyHttpGet">
    <wsdl:operation name="GetVersion">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method returns CDYNE Version information</wsdl:documentation>
      <wsdl:input message="tns:GetVersionHttpGetIn" />
      <wsdl:output message="tns:GetVersionHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ReturnSoundFileIDs">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get available sound files that you can add to your stream via a license key. (free)</wsdl:documentation>
      <wsdl:input message="tns:ReturnSoundFileIDsHttpGetIn" />
      <wsdl:output message="tns:ReturnSoundFileIDsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="RemoveSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file delete. (free)</wsdl:documentation>
      <wsdl:input message="tns:RemoveSoundFileHttpGetIn" />
      <wsdl:output message="tns:RemoveSoundFileHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="RenameSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file rename. (free)</wsdl:documentation>
      <wsdl:input message="tns:RenameSoundFileHttpGetIn" />
      <wsdl:output message="tns:RenameSoundFileHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="UploadSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file upload.  Our system accepts WAV (PCM, U-law, A-law, MS ADPCM) Files.  We plan on adding more very soon.&lt;br&gt;To use the sound file in the notify put ~ around it and start it with a ^.Example "Hello ~^soundfile~, you are cool."(This would text to speech Hello and you are cool,adding the sound file in the middle). (free)</wsdl:documentation>
      <wsdl:input message="tns:UploadSoundFileHttpGetIn" />
      <wsdl:output message="tns:UploadSoundFileHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileLength">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets a Sound File length in Seconds. (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileLengthHttpGetIn" />
      <wsdl:output message="tns:GetSoundFileLengthHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval. (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileHttpGetIn" />
      <wsdl:output message="tns:GetSoundFileHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTTSInULAW">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to convert text into a ULAW encoded sound file.  (May require an additional License Key)</wsdl:documentation>
      <wsdl:input message="tns:GetTTSInULAWHttpGetIn" />
      <wsdl:output message="tns:GetTTSInULAWHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTTSInMP3">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to convert text into a MP3 encoded sound file. (returns an MP3 encoded in 32,64, or 128). (May require a additional License Key)</wsdl:documentation>
      <wsdl:input message="tns:GetTTSInMP3HttpGetIn" />
      <wsdl:output message="tns:GetTTSInMP3HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInMP3">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval (returns an MP3 encoded in 32,64, or 128). (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileInMP3HttpGetIn" />
      <wsdl:output message="tns:GetSoundFileInMP3HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileURL">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval.  Returns a URL to Listen to a particular Sound File in MP3 (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileURLHttpGetIn" />
      <wsdl:output message="tns:GetSoundFileURLHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInUlaw">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval (returns ULAW encoded file). (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileInUlawHttpGetIn" />
      <wsdl:output message="tns:GetSoundFileInUlawHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="RecordSoundViaPhoneCall">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Request the system to call you to record a sound file. SoundfileIDs can only be lowercase and contain normal file characters.  The CallerIDName will be the SoundFileID and the number will be 8000000000.</wsdl:documentation>
      <wsdl:input message="tns:RecordSoundViaPhoneCallHttpGetIn" />
      <wsdl:output message="tns:RecordSoundViaPhoneCallHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatus">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns a status on a particular QueueID.</wsdl:documentation>
      <wsdl:input message="tns:GetQueueIDStatusHttpGetIn" />
      <wsdl:output message="tns:GetQueueIDStatusHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusesByPhoneNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the last 10 phone notifications for a particular phone number.</wsdl:documentation>
      <wsdl:input message="tns:GetQueueIDStatusesByPhoneNumberHttpGetIn" />
      <wsdl:output message="tns:GetQueueIDStatusesByPhoneNumberHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusWithAdvancedInfo">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns a status on a particular QueueID.  This also includes Variable information and more.</wsdl:documentation>
      <wsdl:input message="tns:GetQueueIDStatusWithAdvancedInfoHttpGetIn" />
      <wsdl:output message="tns:GetQueueIDStatusWithAdvancedInfoHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneEnglishBasic">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call any phone number in the US/Canada and read the TextToSay to that phone number using the voice of Diane (voiceid: 0). PhoneNumberToDial must be filled in (They can be in any format as long as there is 10 digits).&lt;br&gt;A reminder about abuse:  &lt;b&gt;Threats and illegal activity can be shared with the authorities.&lt;/b&gt;&lt;br&gt;Use a LicenseKey of 0 for testing.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneEnglishBasicHttpGetIn" />
      <wsdl:output message="tns:NotifyPhoneEnglishBasicHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTransfer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;You must have a valid CDYNE key to use this.  Please test with our other methods.&lt;/b&gt;  This Method is exactly like the NotifyPhoneBasic with one exception.  It allows you to transfer a call by pressing 0.  Put the Transfer phone number in TransferNumberToOnDigit.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneBasicWithTransferHttpGetIn" />
      <wsdl:output message="tns:NotifyPhoneBasicWithTransferHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetMultipleQueueIdStatus">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method returns information about the status of multiple notifies via queueid (delimited by a semicolon).  This transaction is free, but does require a valid licensekey.</wsdl:documentation>
      <wsdl:input message="tns:GetMultipleQueueIdStatusHttpGetIn" />
      <wsdl:output message="tns:GetMultipleQueueIdStatusHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasic">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call any phone number in the US/Canada and read the TextToSay to that phone number. &lt;br&gt;Set VoiceID equal to 0 for TTS Diane to speak the Text.  For a list of Voices with their ID look at getVoices. PhoneNumberToDial and CallerID must be filled in (They can be in any format as long as there is 10 digits).&lt;br&gt;A reminder about abuse:  &lt;b&gt;Threats and illegal activity can be shared with the authorities.&lt;/b&gt;&lt;br&gt;Use a LicenseKey of 0 for testing.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneBasicHttpGetIn" />
      <wsdl:output message="tns:NotifyPhoneBasicHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTryCount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Same as NotifyPhoneBasic with a number of times it will retry the call.  The max is 3.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneBasicWithTryCountHttpGetIn" />
      <wsdl:output message="tns:NotifyPhoneBasicWithTryCountHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasic">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call phone numbers with a default of 3000 calls per minute. (delimited by a semicolon) in the US/Canada and read the TextToSay to that phone number.  You must use a license key for this function.  Your billing will be charged per phone number.</wsdl:documentation>
      <wsdl:input message="tns:NotifyMultiplePhoneBasicHttpGetIn" />
      <wsdl:output message="tns:NotifyMultiplePhoneBasicHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPM">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call phone numbers with a way to set calls per minute. (delimited by a semicolon) in the US/Canada and read the TextToSay to that phone number.  You must use a license key for this function.  Your billing will be charged per phone number.</wsdl:documentation>
      <wsdl:input message="tns:NotifyMultiplePhoneBasicWithCPMHttpGetIn" />
      <wsdl:output message="tns:NotifyMultiplePhoneBasicWithCPMHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPMandReferenceID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call phone numbers with a way to set calls per minute. (delimited by a semicolon) in the US/Canada and read the TextToSay to that phone number.  You must use a license key for this function.  Your billing will be charged per phone number.</wsdl:documentation>
      <wsdl:input message="tns:NotifyMultiplePhoneBasicWithCPMandReferenceIDHttpGetIn" />
      <wsdl:output message="tns:NotifyMultiplePhoneBasicWithCPMandReferenceIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelConference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancels/Kills a Conference by a Conference Key</wsdl:documentation>
      <wsdl:input message="tns:CancelConferenceHttpGetIn" />
      <wsdl:output message="tns:CancelConferenceHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelNotify">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancels a single notify.  This will not cancel completed calls or calls in progress.  You will credited for any successfully cancelled notify that returns a true.</wsdl:documentation>
      <wsdl:input message="tns:CancelNotifyHttpGetIn" />
      <wsdl:output message="tns:CancelNotifyHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelNotifyByReferenceID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancels a batch notify by ReferenceID.  This will not cancel completed calls or calls in progress.  You will credited for any successfully cancelled notifies and that number will return greater than zero.</wsdl:documentation>
      <wsdl:input message="tns:CancelNotifyByReferenceIDHttpGetIn" />
      <wsdl:output message="tns:CancelNotifyByReferenceIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Lists the scripts belonging to a license key.  Set IncludeGlobalScripts to true if you would like CDYNE global scripts to be included.</wsdl:documentation>
      <wsdl:input message="tns:ScriptListHttpGetIn" />
      <wsdl:output message="tns:ScriptListHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptSave">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Save a script (Scriptname can only be 50 characters or less).  Saving a script with an existing name will overwrite the old script.</wsdl:documentation>
      <wsdl:input message="tns:ScriptSaveHttpGetIn" />
      <wsdl:output message="tns:ScriptSaveHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptDelete">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Delete a script</wsdl:documentation>
      <wsdl:input message="tns:ScriptDeleteHttpGetIn" />
      <wsdl:output message="tns:ScriptDeleteHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptLoad">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Load a script's text</wsdl:documentation>
      <wsdl:input message="tns:ScriptLoadHttpGetIn" />
      <wsdl:output message="tns:ScriptLoadHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableLoad">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Variable Management - Load a key's variable (The Variable name can be up to 50 characters long).</wsdl:documentation>
      <wsdl:input message="tns:LicenseKeyVariableLoadHttpGetIn" />
      <wsdl:output message="tns:LicenseKeyVariableLoadHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableSave">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Variable Management - Save a variable (VariableName can only be 50 characters or less).  Saving a Variable with an existing name will overwrite the old Variable.  Saving a blank value will delete the variable.</wsdl:documentation>
      <wsdl:input message="tns:LicenseKeyVariableSaveHttpGetIn" />
      <wsdl:output message="tns:LicenseKeyVariableSaveHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_GetListIDsByLicensekey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Obtains all the list IDs from a specific License key.</wsdl:documentation>
      <wsdl:input message="tns:LM_GetListIDsByLicensekeyHttpGetIn" />
      <wsdl:output message="tns:LM_GetListIDsByLicensekeyHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_GetListMembersByListID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Gets all the phone numbers with their first and last names.</wsdl:documentation>
      <wsdl:input message="tns:LM_GetListMembersByListIDHttpGetIn" />
      <wsdl:output message="tns:LM_GetListMembersByListIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_DialList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Dial a List by ListID.  Returns a Batch ID for the list and begins dialing at the scheduled time.  Scheduled times are in UTC. For more information visit: &lt;a href="http://wiki.cdyne.com/wiki/index.php?title=Phone_Notify%21_LM_DialList"&gt;http://wiki.cdyne.com/wiki/index.php?title=Phone_Notify%21_LM_DialList&lt;/a&gt;</wsdl:documentation>
      <wsdl:input message="tns:LM_DialListHttpGetIn" />
      <wsdl:output message="tns:LM_DialListHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AddNewList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you to add a list that can contain members (Contacts).  You can also attach this list to be apart of a Parent List, otherwise leave ParentList ID = 0.</wsdl:documentation>
      <wsdl:input message="tns:LM_AddNewListHttpGetIn" />
      <wsdl:output message="tns:LM_AddNewListHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AddListMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you to add contacts to a List.  You will need the listid.  The only required fields are ListID, PhoneNumber, and LicenseKey.  Returns a List Member ID.</wsdl:documentation>
      <wsdl:input message="tns:LM_AddListMemberHttpGetIn" />
      <wsdl:output message="tns:LM_AddListMemberHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Deletes a List and it's sub-lists (The lists that have is as a ParentListID).</wsdl:documentation>
      <wsdl:input message="tns:LM_DeleteListHttpGetIn" />
      <wsdl:output message="tns:LM_DeleteListHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteListMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Deletes a List's Member (or contact)</wsdl:documentation>
      <wsdl:input message="tns:LM_DeleteListMemberHttpGetIn" />
      <wsdl:output message="tns:LM_DeleteListMemberHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you alter a ListMember</wsdl:documentation>
      <wsdl:input message="tns:LM_AlterListMemberHttpGetIn" />
      <wsdl:output message="tns:LM_AlterListMemberHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you alter a ListMember, use 0 if you do not want to have a ParentListID, and -1 if you do not wish to change the ParentListID</wsdl:documentation>
      <wsdl:input message="tns:LM_AlterListIDHttpGetIn" />
      <wsdl:output message="tns:LM_AlterListIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetResponseCodes">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will list all of the Response Codes.</wsdl:documentation>
      <wsdl:input message="tns:GetResponseCodesHttpGetIn" />
      <wsdl:output message="tns:GetResponseCodesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAvailableAreaCodes">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method returns all the available area codes in our system.  Please contact info@cdyne.com if you need more listed.</wsdl:documentation>
      <wsdl:input message="tns:GetAvailableAreaCodesHttpGetIn" />
      <wsdl:output message="tns:GetAvailableAreaCodesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAvailableIncomingNumbers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will list a random 10 lines available for incoming calls.  You can assign these lines via the AssignIncomingNumber method to your license key.  You can leave the area code field blank to get any available toll-free lines (888 and 877 numbers are currently the most common).</wsdl:documentation>
      <wsdl:input message="tns:GetAvailableIncomingNumbersHttpGetIn" />
      <wsdl:output message="tns:GetAvailableIncomingNumbersHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAssignedNumbers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets a list of Incoming Numbers assigned to a LicenseKey</wsdl:documentation>
      <wsdl:input message="tns:GetAssignedNumbersHttpGetIn" />
      <wsdl:output message="tns:GetAssignedNumbersHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getVoices">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will list all the voices available for your notification. Use the VoiceID for the Notification Methods</wsdl:documentation>
      <wsdl:input message="tns:getVoicesHttpGetIn" />
      <wsdl:output message="tns:getVoicesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="AssignIncomingNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will assign a Incoming Number to a License Key.  Returns true if assignment is successful.  Returns false if the number is claimed or not available.  Numbers are billed at $5/month per number.  Normal fees for transactions apply.</wsdl:documentation>
      <wsdl:input message="tns:AssignIncomingNumberHttpGetIn" />
      <wsdl:output message="tns:AssignIncomingNumberHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="SetIncomingCallScript">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to update a Call Script for incoming calls.  You must have incoming phone numbers set by CDYNE Staff.</wsdl:documentation>
      <wsdl:input message="tns:SetIncomingCallScriptHttpGetIn" />
      <wsdl:output message="tns:SetIncomingCallScriptHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetIncomingCallScript">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to get the Call Script for incoming calls for a particular number.  You must have incoming phone numbers set by CDYNE Staff.</wsdl:documentation>
      <wsdl:input message="tns:GetIncomingCallScriptHttpGetIn" />
      <wsdl:output message="tns:GetIncomingCallScriptHttpGetOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="PhoneNotifyHttpPost">
    <wsdl:operation name="GetVersion">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method returns CDYNE Version information</wsdl:documentation>
      <wsdl:input message="tns:GetVersionHttpPostIn" />
      <wsdl:output message="tns:GetVersionHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ReturnSoundFileIDs">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get available sound files that you can add to your stream via a license key. (free)</wsdl:documentation>
      <wsdl:input message="tns:ReturnSoundFileIDsHttpPostIn" />
      <wsdl:output message="tns:ReturnSoundFileIDsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="RemoveSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file delete. (free)</wsdl:documentation>
      <wsdl:input message="tns:RemoveSoundFileHttpPostIn" />
      <wsdl:output message="tns:RemoveSoundFileHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="RenameSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file rename. (free)</wsdl:documentation>
      <wsdl:input message="tns:RenameSoundFileHttpPostIn" />
      <wsdl:output message="tns:RenameSoundFileHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="UploadSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file upload.  Our system accepts WAV (PCM, U-law, A-law, MS ADPCM) Files.  We plan on adding more very soon.&lt;br&gt;To use the sound file in the notify put ~ around it and start it with a ^.Example "Hello ~^soundfile~, you are cool."(This would text to speech Hello and you are cool,adding the sound file in the middle). (free)</wsdl:documentation>
      <wsdl:input message="tns:UploadSoundFileHttpPostIn" />
      <wsdl:output message="tns:UploadSoundFileHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileLength">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets a Sound File length in Seconds. (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileLengthHttpPostIn" />
      <wsdl:output message="tns:GetSoundFileLengthHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFile">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval. (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileHttpPostIn" />
      <wsdl:output message="tns:GetSoundFileHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTTSInULAW">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to convert text into a ULAW encoded sound file.  (May require an additional License Key)</wsdl:documentation>
      <wsdl:input message="tns:GetTTSInULAWHttpPostIn" />
      <wsdl:output message="tns:GetTTSInULAWHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTTSInMP3">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to convert text into a MP3 encoded sound file. (returns an MP3 encoded in 32,64, or 128). (May require a additional License Key)</wsdl:documentation>
      <wsdl:input message="tns:GetTTSInMP3HttpPostIn" />
      <wsdl:output message="tns:GetTTSInMP3HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInMP3">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval (returns an MP3 encoded in 32,64, or 128). (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileInMP3HttpPostIn" />
      <wsdl:output message="tns:GetSoundFileInMP3HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileURL">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval.  Returns a URL to Listen to a particular Sound File in MP3 (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileURLHttpPostIn" />
      <wsdl:output message="tns:GetSoundFileURLHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInUlaw">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sound file Retrieval (returns ULAW encoded file). (free)</wsdl:documentation>
      <wsdl:input message="tns:GetSoundFileInUlawHttpPostIn" />
      <wsdl:output message="tns:GetSoundFileInUlawHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="RecordSoundViaPhoneCall">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Request the system to call you to record a sound file. SoundfileIDs can only be lowercase and contain normal file characters.  The CallerIDName will be the SoundFileID and the number will be 8000000000.</wsdl:documentation>
      <wsdl:input message="tns:RecordSoundViaPhoneCallHttpPostIn" />
      <wsdl:output message="tns:RecordSoundViaPhoneCallHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatus">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns a status on a particular QueueID.</wsdl:documentation>
      <wsdl:input message="tns:GetQueueIDStatusHttpPostIn" />
      <wsdl:output message="tns:GetQueueIDStatusHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusesByPhoneNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the last 10 phone notifications for a particular phone number.</wsdl:documentation>
      <wsdl:input message="tns:GetQueueIDStatusesByPhoneNumberHttpPostIn" />
      <wsdl:output message="tns:GetQueueIDStatusesByPhoneNumberHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusWithAdvancedInfo">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns a status on a particular QueueID.  This also includes Variable information and more.</wsdl:documentation>
      <wsdl:input message="tns:GetQueueIDStatusWithAdvancedInfoHttpPostIn" />
      <wsdl:output message="tns:GetQueueIDStatusWithAdvancedInfoHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneEnglishBasic">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call any phone number in the US/Canada and read the TextToSay to that phone number using the voice of Diane (voiceid: 0). PhoneNumberToDial must be filled in (They can be in any format as long as there is 10 digits).&lt;br&gt;A reminder about abuse:  &lt;b&gt;Threats and illegal activity can be shared with the authorities.&lt;/b&gt;&lt;br&gt;Use a LicenseKey of 0 for testing.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneEnglishBasicHttpPostIn" />
      <wsdl:output message="tns:NotifyPhoneEnglishBasicHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTransfer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;You must have a valid CDYNE key to use this.  Please test with our other methods.&lt;/b&gt;  This Method is exactly like the NotifyPhoneBasic with one exception.  It allows you to transfer a call by pressing 0.  Put the Transfer phone number in TransferNumberToOnDigit.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneBasicWithTransferHttpPostIn" />
      <wsdl:output message="tns:NotifyPhoneBasicWithTransferHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetMultipleQueueIdStatus">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method returns information about the status of multiple notifies via queueid (delimited by a semicolon).  This transaction is free, but does require a valid licensekey.</wsdl:documentation>
      <wsdl:input message="tns:GetMultipleQueueIdStatusHttpPostIn" />
      <wsdl:output message="tns:GetMultipleQueueIdStatusHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasic">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call any phone number in the US/Canada and read the TextToSay to that phone number. &lt;br&gt;Set VoiceID equal to 0 for TTS Diane to speak the Text.  For a list of Voices with their ID look at getVoices. PhoneNumberToDial and CallerID must be filled in (They can be in any format as long as there is 10 digits).&lt;br&gt;A reminder about abuse:  &lt;b&gt;Threats and illegal activity can be shared with the authorities.&lt;/b&gt;&lt;br&gt;Use a LicenseKey of 0 for testing.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneBasicHttpPostIn" />
      <wsdl:output message="tns:NotifyPhoneBasicHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTryCount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Same as NotifyPhoneBasic with a number of times it will retry the call.  The max is 3.</wsdl:documentation>
      <wsdl:input message="tns:NotifyPhoneBasicWithTryCountHttpPostIn" />
      <wsdl:output message="tns:NotifyPhoneBasicWithTryCountHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasic">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call phone numbers with a default of 3000 calls per minute. (delimited by a semicolon) in the US/Canada and read the TextToSay to that phone number.  You must use a license key for this function.  Your billing will be charged per phone number.</wsdl:documentation>
      <wsdl:input message="tns:NotifyMultiplePhoneBasicHttpPostIn" />
      <wsdl:output message="tns:NotifyMultiplePhoneBasicHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPM">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call phone numbers with a way to set calls per minute. (delimited by a semicolon) in the US/Canada and read the TextToSay to that phone number.  You must use a license key for this function.  Your billing will be charged per phone number.</wsdl:documentation>
      <wsdl:input message="tns:NotifyMultiplePhoneBasicWithCPMHttpPostIn" />
      <wsdl:output message="tns:NotifyMultiplePhoneBasicWithCPMHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPMandReferenceID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This Method will call phone numbers with a way to set calls per minute. (delimited by a semicolon) in the US/Canada and read the TextToSay to that phone number.  You must use a license key for this function.  Your billing will be charged per phone number.</wsdl:documentation>
      <wsdl:input message="tns:NotifyMultiplePhoneBasicWithCPMandReferenceIDHttpPostIn" />
      <wsdl:output message="tns:NotifyMultiplePhoneBasicWithCPMandReferenceIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelConference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancels/Kills a Conference by a Conference Key</wsdl:documentation>
      <wsdl:input message="tns:CancelConferenceHttpPostIn" />
      <wsdl:output message="tns:CancelConferenceHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelNotify">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancels a single notify.  This will not cancel completed calls or calls in progress.  You will credited for any successfully cancelled notify that returns a true.</wsdl:documentation>
      <wsdl:input message="tns:CancelNotifyHttpPostIn" />
      <wsdl:output message="tns:CancelNotifyHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelNotifyByReferenceID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancels a batch notify by ReferenceID.  This will not cancel completed calls or calls in progress.  You will credited for any successfully cancelled notifies and that number will return greater than zero.</wsdl:documentation>
      <wsdl:input message="tns:CancelNotifyByReferenceIDHttpPostIn" />
      <wsdl:output message="tns:CancelNotifyByReferenceIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Lists the scripts belonging to a license key.  Set IncludeGlobalScripts to true if you would like CDYNE global scripts to be included.</wsdl:documentation>
      <wsdl:input message="tns:ScriptListHttpPostIn" />
      <wsdl:output message="tns:ScriptListHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptSave">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Save a script (Scriptname can only be 50 characters or less).  Saving a script with an existing name will overwrite the old script.</wsdl:documentation>
      <wsdl:input message="tns:ScriptSaveHttpPostIn" />
      <wsdl:output message="tns:ScriptSaveHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptDelete">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Delete a script</wsdl:documentation>
      <wsdl:input message="tns:ScriptDeleteHttpPostIn" />
      <wsdl:output message="tns:ScriptDeleteHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ScriptLoad">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Script Management - Load a script's text</wsdl:documentation>
      <wsdl:input message="tns:ScriptLoadHttpPostIn" />
      <wsdl:output message="tns:ScriptLoadHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableLoad">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Variable Management - Load a key's variable (The Variable name can be up to 50 characters long).</wsdl:documentation>
      <wsdl:input message="tns:LicenseKeyVariableLoadHttpPostIn" />
      <wsdl:output message="tns:LicenseKeyVariableLoadHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableSave">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Variable Management - Save a variable (VariableName can only be 50 characters or less).  Saving a Variable with an existing name will overwrite the old Variable.  Saving a blank value will delete the variable.</wsdl:documentation>
      <wsdl:input message="tns:LicenseKeyVariableSaveHttpPostIn" />
      <wsdl:output message="tns:LicenseKeyVariableSaveHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_GetListIDsByLicensekey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Obtains all the list IDs from a specific License key.</wsdl:documentation>
      <wsdl:input message="tns:LM_GetListIDsByLicensekeyHttpPostIn" />
      <wsdl:output message="tns:LM_GetListIDsByLicensekeyHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_GetListMembersByListID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Gets all the phone numbers with their first and last names.</wsdl:documentation>
      <wsdl:input message="tns:LM_GetListMembersByListIDHttpPostIn" />
      <wsdl:output message="tns:LM_GetListMembersByListIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_DialList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Dial a List by ListID.  Returns a Batch ID for the list and begins dialing at the scheduled time.  Scheduled times are in UTC. For more information visit: &lt;a href="http://wiki.cdyne.com/wiki/index.php?title=Phone_Notify%21_LM_DialList"&gt;http://wiki.cdyne.com/wiki/index.php?title=Phone_Notify%21_LM_DialList&lt;/a&gt;</wsdl:documentation>
      <wsdl:input message="tns:LM_DialListHttpPostIn" />
      <wsdl:output message="tns:LM_DialListHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AddNewList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you to add a list that can contain members (Contacts).  You can also attach this list to be apart of a Parent List, otherwise leave ParentList ID = 0.</wsdl:documentation>
      <wsdl:input message="tns:LM_AddNewListHttpPostIn" />
      <wsdl:output message="tns:LM_AddNewListHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AddListMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you to add contacts to a List.  You will need the listid.  The only required fields are ListID, PhoneNumber, and LicenseKey.  Returns a List Member ID.</wsdl:documentation>
      <wsdl:input message="tns:LM_AddListMemberHttpPostIn" />
      <wsdl:output message="tns:LM_AddListMemberHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Deletes a List and it's sub-lists (The lists that have is as a ParentListID).</wsdl:documentation>
      <wsdl:input message="tns:LM_DeleteListHttpPostIn" />
      <wsdl:output message="tns:LM_DeleteListHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteListMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Deletes a List's Member (or contact)</wsdl:documentation>
      <wsdl:input message="tns:LM_DeleteListMemberHttpPostIn" />
      <wsdl:output message="tns:LM_DeleteListMemberHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you alter a ListMember</wsdl:documentation>
      <wsdl:input message="tns:LM_AlterListMemberHttpPostIn" />
      <wsdl:output message="tns:LM_AlterListMemberHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List Management - Allows you alter a ListMember, use 0 if you do not want to have a ParentListID, and -1 if you do not wish to change the ParentListID</wsdl:documentation>
      <wsdl:input message="tns:LM_AlterListIDHttpPostIn" />
      <wsdl:output message="tns:LM_AlterListIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetResponseCodes">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will list all of the Response Codes.</wsdl:documentation>
      <wsdl:input message="tns:GetResponseCodesHttpPostIn" />
      <wsdl:output message="tns:GetResponseCodesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAvailableAreaCodes">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method returns all the available area codes in our system.  Please contact info@cdyne.com if you need more listed.</wsdl:documentation>
      <wsdl:input message="tns:GetAvailableAreaCodesHttpPostIn" />
      <wsdl:output message="tns:GetAvailableAreaCodesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAvailableIncomingNumbers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will list a random 10 lines available for incoming calls.  You can assign these lines via the AssignIncomingNumber method to your license key.  You can leave the area code field blank to get any available toll-free lines (888 and 877 numbers are currently the most common).</wsdl:documentation>
      <wsdl:input message="tns:GetAvailableIncomingNumbersHttpPostIn" />
      <wsdl:output message="tns:GetAvailableIncomingNumbersHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAssignedNumbers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets a list of Incoming Numbers assigned to a LicenseKey</wsdl:documentation>
      <wsdl:input message="tns:GetAssignedNumbersHttpPostIn" />
      <wsdl:output message="tns:GetAssignedNumbersHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getVoices">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will list all the voices available for your notification. Use the VoiceID for the Notification Methods</wsdl:documentation>
      <wsdl:input message="tns:getVoicesHttpPostIn" />
      <wsdl:output message="tns:getVoicesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="AssignIncomingNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method will assign a Incoming Number to a License Key.  Returns true if assignment is successful.  Returns false if the number is claimed or not available.  Numbers are billed at $5/month per number.  Normal fees for transactions apply.</wsdl:documentation>
      <wsdl:input message="tns:AssignIncomingNumberHttpPostIn" />
      <wsdl:output message="tns:AssignIncomingNumberHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="SetIncomingCallScript">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to update a Call Script for incoming calls.  You must have incoming phone numbers set by CDYNE Staff.</wsdl:documentation>
      <wsdl:input message="tns:SetIncomingCallScriptHttpPostIn" />
      <wsdl:output message="tns:SetIncomingCallScriptHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetIncomingCallScript">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows you to get the Call Script for incoming calls for a particular number.  You must have incoming phone numbers set by CDYNE Staff.</wsdl:documentation>
      <wsdl:input message="tns:GetIncomingCallScriptHttpPostIn" />
      <wsdl:output message="tns:GetIncomingCallScriptHttpPostOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PhoneNotifySoap" type="tns:PhoneNotifySoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetVersion">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetVersion" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReturnSoundFileIDs">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/ReturnSoundFileIDs" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveSoundFile">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/RemoveSoundFile" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenameSoundFile">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/RenameSoundFile" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UploadSoundFile">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/UploadSoundFile" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileLength">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetSoundFileLength" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFile">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetSoundFile" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTTSInULAW">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetTTSInULAW" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTTSInMP3">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetTTSInMP3" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInMP3">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetSoundFileInMP3" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileURL">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetSoundFileURL" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInUlaw">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetSoundFileInUlaw" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RecordSoundViaPhoneCall">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/RecordSoundViaPhoneCall" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatus">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetQueueIDStatus" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusesByPhoneNumber">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetQueueIDStatusesByPhoneNumber" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusWithAdvancedInfo">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetQueueIDStatusWithAdvancedInfo" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneEnglishBasic">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyPhoneEnglishBasic" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTransfer">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasicWithTransfer" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMultipleQueueIdStatus">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetMultipleQueueIdStatus" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasic">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasic" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTryCount">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasicWithTryCount" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneAdvanced">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyPhoneAdvanced" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasic">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasic" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPM">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasicWithCPM" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPMandReferenceID">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasicWithCPMandReferenceID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneAdvanced">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneAdvanced" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelConference">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/CancelConference" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelNotify">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/CancelNotify" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelNotifyByReferenceID">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/CancelNotifyByReferenceID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptList">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/ScriptList" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptSave">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/ScriptSave" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptDelete">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/ScriptDelete" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptLoad">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/ScriptLoad" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableLoad">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LicenseKeyVariableLoad" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableSave">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LicenseKeyVariableSave" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_GetListIDsByLicensekey">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_GetListIDsByLicensekey" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_GetListMembersByListID">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_GetListMembersByListID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DialList">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_DialList" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DialListAdvanced">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_DialListAdvanced" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AddNewList">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_AddNewList" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AddListMember">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_AddListMember" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteList">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_DeleteList" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteListMember">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_DeleteListMember" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListMember">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_AlterListMember" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListID">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_AlterListID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetResponseCodes">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetResponseCodes" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableAreaCodes">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetAvailableAreaCodes" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableIncomingNumbers">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetAvailableIncomingNumbers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAssignedNumbers">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetAssignedNumbers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getVoices">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/getVoices" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AssignIncomingNumber">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/AssignIncomingNumber" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetIncomingCallScript">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/SetIncomingCallScript" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetIncomingCallScript">
      <soap:operation soapAction="http://ws.cdyne.com/NotifyWS/GetIncomingCallScript" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="PhoneNotifySoap12" type="tns:PhoneNotifySoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetVersion">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetVersion" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReturnSoundFileIDs">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/ReturnSoundFileIDs" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveSoundFile">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/RemoveSoundFile" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenameSoundFile">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/RenameSoundFile" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UploadSoundFile">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/UploadSoundFile" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileLength">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetSoundFileLength" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFile">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetSoundFile" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTTSInULAW">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetTTSInULAW" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTTSInMP3">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetTTSInMP3" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInMP3">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetSoundFileInMP3" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileURL">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetSoundFileURL" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInUlaw">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetSoundFileInUlaw" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RecordSoundViaPhoneCall">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/RecordSoundViaPhoneCall" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatus">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetQueueIDStatus" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusesByPhoneNumber">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetQueueIDStatusesByPhoneNumber" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusWithAdvancedInfo">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetQueueIDStatusWithAdvancedInfo" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneEnglishBasic">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyPhoneEnglishBasic" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTransfer">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasicWithTransfer" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMultipleQueueIdStatus">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetMultipleQueueIdStatus" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasic">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasic" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTryCount">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyPhoneBasicWithTryCount" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneAdvanced">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyPhoneAdvanced" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasic">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasic" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPM">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasicWithCPM" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPMandReferenceID">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneBasicWithCPMandReferenceID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneAdvanced">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/NotifyMultiplePhoneAdvanced" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelConference">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/CancelConference" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelNotify">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/CancelNotify" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelNotifyByReferenceID">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/CancelNotifyByReferenceID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptList">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/ScriptList" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptSave">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/ScriptSave" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptDelete">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/ScriptDelete" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptLoad">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/ScriptLoad" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableLoad">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LicenseKeyVariableLoad" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableSave">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LicenseKeyVariableSave" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_GetListIDsByLicensekey">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_GetListIDsByLicensekey" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_GetListMembersByListID">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_GetListMembersByListID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DialList">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_DialList" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DialListAdvanced">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_DialListAdvanced" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AddNewList">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_AddNewList" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AddListMember">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_AddListMember" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteList">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_DeleteList" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteListMember">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_DeleteListMember" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListMember">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_AlterListMember" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListID">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/LM_AlterListID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetResponseCodes">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetResponseCodes" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableAreaCodes">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetAvailableAreaCodes" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableIncomingNumbers">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetAvailableIncomingNumbers" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAssignedNumbers">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetAssignedNumbers" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getVoices">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/getVoices" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AssignIncomingNumber">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/AssignIncomingNumber" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetIncomingCallScript">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/SetIncomingCallScript" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetIncomingCallScript">
      <soap12:operation soapAction="http://ws.cdyne.com/NotifyWS/GetIncomingCallScript" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="PhoneNotifyHttpGet" type="tns:PhoneNotifyHttpGet">
    <http:binding verb="GET" />
    <wsdl:operation name="GetVersion">
      <http:operation location="/GetVersion" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReturnSoundFileIDs">
      <http:operation location="/ReturnSoundFileIDs" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveSoundFile">
      <http:operation location="/RemoveSoundFile" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenameSoundFile">
      <http:operation location="/RenameSoundFile" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UploadSoundFile">
      <http:operation location="/UploadSoundFile" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileLength">
      <http:operation location="/GetSoundFileLength" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFile">
      <http:operation location="/GetSoundFile" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTTSInULAW">
      <http:operation location="/GetTTSInULAW" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTTSInMP3">
      <http:operation location="/GetTTSInMP3" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInMP3">
      <http:operation location="/GetSoundFileInMP3" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileURL">
      <http:operation location="/GetSoundFileURL" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInUlaw">
      <http:operation location="/GetSoundFileInUlaw" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RecordSoundViaPhoneCall">
      <http:operation location="/RecordSoundViaPhoneCall" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatus">
      <http:operation location="/GetQueueIDStatus" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusesByPhoneNumber">
      <http:operation location="/GetQueueIDStatusesByPhoneNumber" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusWithAdvancedInfo">
      <http:operation location="/GetQueueIDStatusWithAdvancedInfo" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneEnglishBasic">
      <http:operation location="/NotifyPhoneEnglishBasic" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTransfer">
      <http:operation location="/NotifyPhoneBasicWithTransfer" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMultipleQueueIdStatus">
      <http:operation location="/GetMultipleQueueIdStatus" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasic">
      <http:operation location="/NotifyPhoneBasic" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTryCount">
      <http:operation location="/NotifyPhoneBasicWithTryCount" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasic">
      <http:operation location="/NotifyMultiplePhoneBasic" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPM">
      <http:operation location="/NotifyMultiplePhoneBasicWithCPM" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPMandReferenceID">
      <http:operation location="/NotifyMultiplePhoneBasicWithCPMandReferenceID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelConference">
      <http:operation location="/CancelConference" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output />
    </wsdl:operation>
    <wsdl:operation name="CancelNotify">
      <http:operation location="/CancelNotify" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelNotifyByReferenceID">
      <http:operation location="/CancelNotifyByReferenceID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptList">
      <http:operation location="/ScriptList" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptSave">
      <http:operation location="/ScriptSave" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptDelete">
      <http:operation location="/ScriptDelete" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptLoad">
      <http:operation location="/ScriptLoad" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableLoad">
      <http:operation location="/LicenseKeyVariableLoad" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableSave">
      <http:operation location="/LicenseKeyVariableSave" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_GetListIDsByLicensekey">
      <http:operation location="/LM_GetListIDsByLicensekey" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_GetListMembersByListID">
      <http:operation location="/LM_GetListMembersByListID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DialList">
      <http:operation location="/LM_DialList" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AddNewList">
      <http:operation location="/LM_AddNewList" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AddListMember">
      <http:operation location="/LM_AddListMember" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteList">
      <http:operation location="/LM_DeleteList" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteListMember">
      <http:operation location="/LM_DeleteListMember" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListMember">
      <http:operation location="/LM_AlterListMember" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListID">
      <http:operation location="/LM_AlterListID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetResponseCodes">
      <http:operation location="/GetResponseCodes" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableAreaCodes">
      <http:operation location="/GetAvailableAreaCodes" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableIncomingNumbers">
      <http:operation location="/GetAvailableIncomingNumbers" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAssignedNumbers">
      <http:operation location="/GetAssignedNumbers" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getVoices">
      <http:operation location="/getVoices" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AssignIncomingNumber">
      <http:operation location="/AssignIncomingNumber" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetIncomingCallScript">
      <http:operation location="/SetIncomingCallScript" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetIncomingCallScript">
      <http:operation location="/GetIncomingCallScript" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="PhoneNotifyHttpPost" type="tns:PhoneNotifyHttpPost">
    <http:binding verb="POST" />
    <wsdl:operation name="GetVersion">
      <http:operation location="/GetVersion" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReturnSoundFileIDs">
      <http:operation location="/ReturnSoundFileIDs" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveSoundFile">
      <http:operation location="/RemoveSoundFile" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenameSoundFile">
      <http:operation location="/RenameSoundFile" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UploadSoundFile">
      <http:operation location="/UploadSoundFile" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileLength">
      <http:operation location="/GetSoundFileLength" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFile">
      <http:operation location="/GetSoundFile" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTTSInULAW">
      <http:operation location="/GetTTSInULAW" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTTSInMP3">
      <http:operation location="/GetTTSInMP3" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInMP3">
      <http:operation location="/GetSoundFileInMP3" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileURL">
      <http:operation location="/GetSoundFileURL" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSoundFileInUlaw">
      <http:operation location="/GetSoundFileInUlaw" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RecordSoundViaPhoneCall">
      <http:operation location="/RecordSoundViaPhoneCall" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatus">
      <http:operation location="/GetQueueIDStatus" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusesByPhoneNumber">
      <http:operation location="/GetQueueIDStatusesByPhoneNumber" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetQueueIDStatusWithAdvancedInfo">
      <http:operation location="/GetQueueIDStatusWithAdvancedInfo" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneEnglishBasic">
      <http:operation location="/NotifyPhoneEnglishBasic" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTransfer">
      <http:operation location="/NotifyPhoneBasicWithTransfer" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMultipleQueueIdStatus">
      <http:operation location="/GetMultipleQueueIdStatus" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasic">
      <http:operation location="/NotifyPhoneBasic" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyPhoneBasicWithTryCount">
      <http:operation location="/NotifyPhoneBasicWithTryCount" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasic">
      <http:operation location="/NotifyMultiplePhoneBasic" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPM">
      <http:operation location="/NotifyMultiplePhoneBasicWithCPM" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NotifyMultiplePhoneBasicWithCPMandReferenceID">
      <http:operation location="/NotifyMultiplePhoneBasicWithCPMandReferenceID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelConference">
      <http:operation location="/CancelConference" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output />
    </wsdl:operation>
    <wsdl:operation name="CancelNotify">
      <http:operation location="/CancelNotify" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelNotifyByReferenceID">
      <http:operation location="/CancelNotifyByReferenceID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptList">
      <http:operation location="/ScriptList" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptSave">
      <http:operation location="/ScriptSave" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptDelete">
      <http:operation location="/ScriptDelete" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScriptLoad">
      <http:operation location="/ScriptLoad" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableLoad">
      <http:operation location="/LicenseKeyVariableLoad" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LicenseKeyVariableSave">
      <http:operation location="/LicenseKeyVariableSave" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_GetListIDsByLicensekey">
      <http:operation location="/LM_GetListIDsByLicensekey" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_GetListMembersByListID">
      <http:operation location="/LM_GetListMembersByListID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DialList">
      <http:operation location="/LM_DialList" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AddNewList">
      <http:operation location="/LM_AddNewList" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AddListMember">
      <http:operation location="/LM_AddListMember" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteList">
      <http:operation location="/LM_DeleteList" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_DeleteListMember">
      <http:operation location="/LM_DeleteListMember" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListMember">
      <http:operation location="/LM_AlterListMember" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LM_AlterListID">
      <http:operation location="/LM_AlterListID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetResponseCodes">
      <http:operation location="/GetResponseCodes" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableAreaCodes">
      <http:operation location="/GetAvailableAreaCodes" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableIncomingNumbers">
      <http:operation location="/GetAvailableIncomingNumbers" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAssignedNumbers">
      <http:operation location="/GetAssignedNumbers" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getVoices">
      <http:operation location="/getVoices" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AssignIncomingNumber">
      <http:operation location="/AssignIncomingNumber" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetIncomingCallScript">
      <http:operation location="/SetIncomingCallScript" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetIncomingCallScript">
      <http:operation location="/GetIncomingCallScript" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PhoneNotify">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This service is FREE to test.  The system will attempt to call a number 1 time until it is answered (Can be modified with the TryCount property).&lt;br&gt;We now accept Extension numbers by using an 'x' in the phone number (ex:555-555-1000x3025).&lt;br&gt;&lt;br&gt;A reminder about abuse:  &lt;b&gt;Threats and illegal activity can be shared with the authorities.&lt;/b&gt;&lt;p&gt; For Advanced TextToSay Commands Visit: &lt;a href="http://wiki.cdyne.com/index.php/Notify_TextToSay_Commands"&gt;http://wiki.cdyne.com/index.php/Notify_TextToSay_Commands&lt;/a&gt;&lt;/p&gt;</wsdl:documentation>
    <wsdl:port name="PhoneNotifySoap" binding="tns:PhoneNotifySoap">
      <soap:address location="http://ws.cdyne.com/notifyws/phonenotify.asmx" />
    </wsdl:port>
    <wsdl:port name="PhoneNotifySoap12" binding="tns:PhoneNotifySoap12">
      <soap12:address location="http://ws.cdyne.com/notifyws/phonenotify.asmx" />
    </wsdl:port>
    <wsdl:port name="PhoneNotifyHttpGet" binding="tns:PhoneNotifyHttpGet">
      <http:address location="http://ws.cdyne.com/notifyws/phonenotify.asmx" />
    </wsdl:port>
    <wsdl:port name="PhoneNotifyHttpPost" binding="tns:PhoneNotifyHttpPost">
      <http:address location="http://ws.cdyne.com/notifyws/phonenotify.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>